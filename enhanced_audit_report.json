{
  "summary": {
    "total_issues": 319,
    "critical_issues": 5,
    "high_issues": 1,
    "medium_issues": 313,
    "low_issues": 0,
    "auto_fixable": 162
  },
  "issues": [
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "populate-clients.ts",
      "line_number": 116,
      "description": "Debug logging (should be removed in production): //     console.log(\"Starting client population...\");",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "populate-clients.ts",
      "line_number": 117,
      "description": "Debug logging (should be removed in production): //     console.log(`Using therapist ID: ${THERAPIST_ID}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "populate-clients.ts",
      "line_number": 128,
      "description": "Debug logging (should be removed in production): //         console.log(`Client ${clientData.firstName} ${clientData.lastName} already exists, skipping...`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "populate-clients.ts",
      "line_number": 138,
      "description": "Debug logging (should be removed in production): //       console.log(`Created client: ${insertedClient.firstName} ${insertedClient.lastName} (ID: ${insertedClient.id})`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "populate-clients.ts",
      "line_number": 141,
      "description": "Debug logging (should be removed in production): //     console.log(\"Client population completed successfully!\");",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "populate-clients.ts",
      "line_number": 142,
      "description": "Debug logging (should be removed in production): //     console.log(`All clients are assigned to therapist ID: ${THERAPIST_ID}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "populate-clients.ts",
      "line_number": 143,
      "description": "Debug logging (should be removed in production): //     console.log(\"Use this therapist ID in your application to see these clients.\");",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/lib/api.ts",
      "line_number": 104,
      "description": "Loose typing: static async getTodaysCalendarEvents(): Promise<any[]> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/lib/api.ts",
      "line_number": 187,
      "description": "Loose typing: static async getGoogleCalendarEvents(): Promise<any[]> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/calendarExport.ts",
      "line_number": 324,
      "description": "Debug logging (should be removed in production): console.log(`\ud83d\udcca Exporting weekly calendar: ${weekStart.toDateString()} to ${weekEnd.toDateString()}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/calendarExport.ts",
      "line_number": 347,
      "description": "Debug logging (should be removed in production): console.log(`\ud83d\udcca Exporting daily calendar for: ${date.toDateString()}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/calendarExport.ts",
      "line_number": 370,
      "description": "Debug logging (should be removed in production): console.log(`\ud83d\udcca Exporting appointment list: ${startDate.toDateString()} to ${endDate.toDateString()}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/perfectDashboardExport.ts",
      "line_number": 186,
      "description": "Debug logging (should be removed in production): console.log('\ud83d\udcca Exporting perfect weekly view matching screenshot layout');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/perfectDashboardExport.ts",
      "line_number": 337,
      "description": "Debug logging (should be removed in production): console.log('\ud83d\udcca Exporting perfect daily view matching screenshot layout');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/currentWeeklyExport.ts",
      "line_number": 60,
      "description": "Debug logging (should be removed in production): console.log(`\ud83d\udcca Exporting weekly view: ${normalizedWeekStart.toDateString()} to ${normalizedWeekEnd.toDateString()}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/currentWeeklyExport.ts",
      "line_number": 61,
      "description": "Debug logging (should be removed in production): console.log(`\ud83d\udcca Total events available: ${events.length}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/currentWeeklyExport.ts",
      "line_number": 83,
      "description": "Debug logging (should be removed in production): console.log(`\ud83d\udd0d Monday events found: ${mondayEvents.length}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/currentWeeklyExport.ts",
      "line_number": 86,
      "description": "Debug logging (should be removed in production): console.log(` - \"${event.title}\" at ${eventDate.toLocaleString()}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/aiServices.ts",
      "line_number": 153,
      "description": "Loose typing: export async function generateAppointmentInsights(appointments: any[]): Promise<AIAnalysisResult> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/utils/aiServices.ts",
      "line_number": 153,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/utils/aiServices.ts",
      "line_number": 167,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/utils/timeSlots.ts",
      "line_number": 55,
      "description": "Debug logging (should be removed in production): console.log(`Event \"${event.clientName || event.title}\" matches time slot ${timeSlot.display}:`, {",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/utils/timeSlots.ts",
      "line_number": 36,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/utils/errorHandler.ts",
      "line_number": 33,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/vite.ts",
      "line_number": 19,
      "description": "Debug logging (should be removed in production): console.log(`${formattedTime} [${source}] ${message}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "critical",
      "file_path": "server/vite.ts",
      "line_number": 73,
      "description": "Synchronous file operations: if (!fs.existsSync(distPath)) {",
      "recommendation": "Fix synchronous file operations in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/index.ts",
      "line_number": 63,
      "description": "Potential exposed secrets: const port = parseInt(process.env.PORT || '5000', 10);",
      "recommendation": "Fix potential exposed secrets in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/index.ts",
      "line_number": 42,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-services.ts",
      "line_number": 188,
      "description": "Loose typing: export async function generateAppointmentInsights(appointments: any[]): Promise<AIAnalysisResult> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-services.ts",
      "line_number": 188,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-services.ts",
      "line_number": 202,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth-old.ts",
      "line_number": 11,
      "description": "Localhost usage (should use 0.0.0.0): return 'http://localhost:5000/api/auth/google/callback';",
      "recommendation": "Fix localhost usage (should use 0.0.0.0) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth-old.ts",
      "line_number": 72,
      "description": "Debug logging (should be removed in production): console.log('Successfully authenticated with Google Calendar');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth-old.ts",
      "line_number": 88,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth-old.ts",
      "line_number": 115,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth-old.ts",
      "line_number": 116,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth-old.ts",
      "line_number": 182,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-enhanced-insights.ts",
      "line_number": 8,
      "description": "Loose typing: sessionHistory?: any[];",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-enhanced-insights.ts",
      "line_number": 7,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-enhanced-insights.ts",
      "line_number": 8,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-enhanced-insights.ts",
      "line_number": 9,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-enhanced-insights.ts",
      "line_number": 10,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-pattern-recognition.ts",
      "line_number": 247,
      "description": "Loose typing: function groupSessionsByTimePattern(sessions: any[], pattern: 'month' | 'dayOfWeek'): any {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-pattern-recognition.ts",
      "line_number": 267,
      "description": "Loose typing: function analyzeAroundMajorEvents(sessions: any[]): any {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-pattern-recognition.ts",
      "line_number": 247,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-pattern-recognition.ts",
      "line_number": 248,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-pattern-recognition.ts",
      "line_number": 267,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-pattern-recognition.ts",
      "line_number": 269,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-personalized-therapy.ts",
      "line_number": 7,
      "description": "Loose typing: export async function generateEvidenceBasedInterventions(clientProfile: any, sessionHistory: any[]): Promise<any> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-personalized-therapy.ts",
      "line_number": 7,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-personalized-therapy.ts",
      "line_number": 73,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-personalized-therapy.ts",
      "line_number": 147,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/perplexity.ts",
      "line_number": 157,
      "description": "Potential exposed secrets: export const perplexityClient = new PerplexityClient(process.env.PERPLEXITY_API_KEY || '');",
      "recommendation": "Fix potential exposed secrets in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/perplexity.ts",
      "line_number": 115,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/perplexity.ts",
      "line_number": 136,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 240,
      "description": "Loose typing: export async function generateContinuingEducationRecommendations(therapistId: string, clientMix: any[]): Promise<any> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 323,
      "description": "Loose typing: function calculateAverageSessionLength(sessions: any[]): number {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 327,
      "description": "Loose typing: function calculateCompletionRate(appointments: any[]): number {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 332,
      "description": "Loose typing: function calculateNoShowRate(appointments: any[]): number {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 337,
      "description": "Loose typing: function calculateCancellationRate(appointments: any[]): number {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 353,
      "description": "Loose typing: function calculateSessionFrequency(sessions: any[]): string {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 367,
      "description": "Loose typing: function calculateAppointmentConsistency(appointments: any[]): number {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 373,
      "description": "Loose typing: function analyzeRecentEngagement(sessions: any[]): string {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 429,
      "description": "Loose typing: function getActiveClientCount(sessions: any[]): number {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 434,
      "description": "Loose typing: function analyzeOverallProgress(outcomes: any[]): string {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 445,
      "description": "Loose typing: function analyzeTherapeuticApproaches(sessions: any[]): any[] {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 456,
      "description": "Loose typing: function analyzeClientSpecialization(sessions: any[]): any[] {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 466,
      "description": "Loose typing: function getMostCommonPresentations(clientMix: any[]): string[] {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 479,
      "description": "Loose typing: function identifyTreatmentGaps(clientMix: any[]): string[] {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 489,
      "description": "Loose typing: function identifyEmergingNeeds(clientMix: any[]): string[] {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 240,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 323,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 327,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 332,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 337,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 353,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 367,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 373,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 429,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 434,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 445,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 456,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 466,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 468,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 474,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 479,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/ai-practice-intelligence.ts",
      "line_number": 489,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/ai-multi-model.ts",
      "line_number": 9,
      "description": "Potential exposed secrets: const gemini = new GoogleGenAI({ apiKey: process.env.GEMINI_API_KEY || \"\" });",
      "recommendation": "Fix potential exposed secrets in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 10,
      "description": "Debug logging (should be removed in production): console.log('Using REPLIT_DEV_DOMAIN redirect URI:', uri);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 16,
      "description": "Debug logging (should be removed in production): console.log('Using REPLIT_DOMAINS redirect URI:', uri);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 20,
      "description": "Localhost usage (should use 0.0.0.0): const uri = 'http://localhost:5000/api/auth/google/callback';",
      "recommendation": "Fix localhost usage (should use 0.0.0.0) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 21,
      "description": "Debug logging (should be removed in production): console.log('Using localhost redirect URI:', uri);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 21,
      "description": "Localhost usage (should use 0.0.0.0): console.log('Using localhost redirect URI:', uri);",
      "recommendation": "Fix localhost usage (should use 0.0.0.0) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 76,
      "description": "Debug logging (should be removed in production): console.log('Generating OAuth URL with redirect URI:', getRedirectUri());",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 77,
      "description": "Debug logging (should be removed in production): console.log('Using Client ID:', process.env.GOOGLE_CLIENT_ID?.substring(0, 20) + '...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 86,
      "description": "Debug logging (should be removed in production): console.log('Generated OAuth URL:', authUrl);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 87,
      "description": "Debug logging (should be removed in production): console.log('Generated auth URL length:', authUrl.length);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 88,
      "description": "Debug logging (should be removed in production): console.log('Auth URL domain:', authUrl.substring(0, 50) + '...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 95,
      "description": "Debug logging (should be removed in production): console.log('Exchanging authorization code for tokens...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 101,
      "description": "Debug logging (should be removed in production): console.log('Successfully received tokens:', Object.keys(tokens));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 106,
      "description": "Debug logging (should be removed in production): console.log('Successfully authenticated with Google Calendar');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 116,
      "description": "Debug logging (should be removed in production): console.log(`Google Calendar connection status: ${connected}, authenticated: ${this.isAuthenticated}, has tokens: ${this.tokens !== null}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 127,
      "description": "Loose typing: async listCalendars(): Promise<any[]> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 132,
      "description": "Debug logging (should be removed in production): console.log(`Found ${calendars.length} calendars:`, calendars.map(c => `${c.summary} (${c.id})`));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 154,
      "description": "Debug logging (should be removed in production): console.log(`Fetching ALL events for calendar: ${calendarId}, timeMin: ${finalTimeMin}, timeMax: ${finalTimeMax}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 156,
      "description": "Loose typing: let allEvents: any[] = [];",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 163,
      "description": "Debug logging (should be removed in production): console.log(`Fetching page ${pageCount} for calendar ${calendarId}${pageToken ? ` (token: ${pageToken.substring(0, 20)}...)` : ''}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 180,
      "description": "Debug logging (should be removed in production): console.log(`Page ${pageCount}: Found ${events.length} events. Total so far: ${allEvents.length}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 189,
      "description": "Debug logging (should be removed in production): console.log(`TOTAL: Found ${allEvents.length} events in calendar ${calendarId} across ${pageCount} pages`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 239,
      "description": "Debug logging (should be removed in production): console.log(`Skipping calendar ${cal.summary} due to error:`, error);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 247,
      "description": "Debug logging (should be removed in production): console.log(`Total events found across all calendars: ${allEvents.length}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 423,
      "description": "Debug logging (should be removed in production): console.log('Starting full calendar sync to database...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 427,
      "description": "Debug logging (should be removed in production): console.log(`Syncing calendar: ${cal.summary} (${cal.id})`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 433,
      "description": "Debug logging (should be removed in production): console.log(`Synced ${events.length} events from ${cal.summary}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 435,
      "description": "Debug logging (should be removed in production): console.log('Calendar sync completed');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 442,
      "description": "Loose typing: async getEventsFromDatabase(therapistId: string = 'e66b8b8e-e7a2-40b9-ae74-00c93ffe503c', timeMin?: string, timeMax?: string): Promise<any[]> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 60,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 107,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 134,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 156,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 191,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 192,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 214,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 255,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 277,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 288,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 298,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 321,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 332,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/auth.ts",
      "line_number": 352,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 14,
      "description": "Debug logging (should be removed in production): console.log('Initializing OAuth with redirect URI:', redirectUri);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 43,
      "description": "Localhost usage (should use 0.0.0.0): return 'http://localhost:5000/api/auth/google/callback';",
      "recommendation": "Fix localhost usage (should use 0.0.0.0) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 47,
      "description": "Debug logging (should be removed in production): console.log('Generating auth URL...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 60,
      "description": "Debug logging (should be removed in production): console.log('Generated auth URL:', authUrl.substring(0, 100) + '...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 72,
      "description": "Debug logging (should be removed in production): console.log('Loaded existing OAuth tokens');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 89,
      "description": "Debug logging (should be removed in production): console.log('OAuth tokens saved to file');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 97,
      "description": "Debug logging (should be removed in production): console.log('Exchanging code for tokens...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 105,
      "description": "Debug logging (should be removed in production): console.log('Successfully obtained and saved tokens:', Object.keys(tokens));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 115,
      "description": "Debug logging (should be removed in production): console.log('OAuth connection check:', {",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 178,
      "description": "Debug logging (should be removed in production): console.log('OAuth tokens file deleted');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 186,
      "description": "Debug logging (should be removed in production): console.log('OAuth session disconnected');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 8,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 106,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 132,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/oauth-simple.ts",
      "line_number": 158,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/vite-backup.ts",
      "line_number": 19,
      "description": "Debug logging (should be removed in production): console.log(`${formattedTime} [${source}] ${message}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "critical",
      "file_path": "server/vite-backup.ts",
      "line_number": 73,
      "description": "Synchronous file operations: if (!fs.existsSync(distPath)) {",
      "recommendation": "Fix synchronous file operations in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 140,
      "description": "Debug logging (should be removed in production): console.log('Processing PDF using pdfjs-dist:', filePath);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 161,
      "description": "Debug logging (should be removed in production): console.log(`Processing PDF page ${pageNum}...`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 191,
      "description": "Debug logging (should be removed in production): console.log('Successfully extracted text from PDF, length:', fullText.length);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 266,
      "description": "Loose typing: (jsonData as any[]).forEach((row: any) => {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 292,
      "description": "Loose typing: const results: any[] = [];",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 581,
      "description": "Debug logging (should be removed in production): console.log('=== DEBUG: Cleaned Content for Parsing ===');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 582,
      "description": "Debug logging (should be removed in production): console.log(cleanedContent.substring(0, 1000));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 583,
      "description": "Debug logging (should be removed in production): console.log('=== END DEBUG ===');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 588,
      "description": "Debug logging (should be removed in production): console.log('=== DEBUG: Extracted Sections ===');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 589,
      "description": "Debug logging (should be removed in production): console.log('Subjective:', extractedSections.subjective.substring(0, 200));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 590,
      "description": "Debug logging (should be removed in production): console.log('Objective:', extractedSections.objective.substring(0, 200));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 591,
      "description": "Debug logging (should be removed in production): console.log('Assessment:', extractedSections.assessment.substring(0, 200));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 592,
      "description": "Debug logging (should be removed in production): console.log('Plan:', extractedSections.plan.substring(0, 200));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 593,
      "description": "Debug logging (should be removed in production): console.log('=== END DEBUG ===');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 9,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 39,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 71,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 78,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 106,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 125,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 179,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 193,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 209,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 225,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 266,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 278,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 292,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 628,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/document-processor.ts",
      "line_number": 740,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 580,
      "description": "Debug logging (should be removed in production): console.log('Google OAuth initiation requested');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 586,
      "description": "Debug logging (should be removed in production): console.log('Redirecting to Google OAuth...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 659,
      "description": "Debug logging (should be removed in production): console.log(`Checking ${calendars.length} calendars for today's events...`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 663,
      "description": "Debug logging (should be removed in production): console.log(`Checking calendar: ${calendar.summary} (${calendar.id})`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 670,
      "description": "Debug logging (should be removed in production): console.log(`Found ${events.length} events in ${calendar.summary}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 685,
      "description": "Debug logging (should be removed in production): console.log(`All-day event \"${event.summary}\": ${eventDateStr} === ${todayStr}? ${isToday}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 695,
      "description": "Debug logging (should be removed in production): console.log(`Timed event \"${event.summary}\": ${eventDateStr} === ${todayStr}? ${isToday}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 700,
      "description": "Debug logging (should be removed in production): console.log(`Filtered to ${todaysEvents.length} events actually for today in ${calendar.summary}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 714,
      "description": "Debug logging (should be removed in production): console.log(`Total events found across all calendars: ${allEvents.length}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 741,
      "description": "Debug logging (should be removed in production): console.log('OAuth callback received:', {",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 761,
      "description": "Debug logging (should be removed in production): console.log('Processing authorization code...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 767,
      "description": "Debug logging (should be removed in production): console.log('Google Calendar authentication successful');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 791,
      "description": "Debug logging (should be removed in production): console.log(`Fetching calendar events from ${startTime} to ${endTime}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 806,
      "description": "Debug logging (should be removed in production): console.log(`Found ${events.length} events in ${calendar.summary}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 826,
      "description": "Debug logging (should be removed in production): console.log(`Total events found for date range: ${allEvents.length}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1262,
      "description": "Debug logging (should be removed in production): console.log('Received session notes request:', { eventId, notes, content, date, clientName });",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1283,
      "description": "Debug logging (should be removed in production): console.log('Session note saved successfully:', sessionNote.id);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 348,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 588,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 604,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 616,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 632,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 716,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 731,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 770,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 838,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 865,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 884,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 899,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 911,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 924,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 937,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 950,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 962,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 974,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 987,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 999,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1011,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1024,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1036,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1048,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1061,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1073,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1086,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1159,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1236,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1251,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1285,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1296,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1321,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1359,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1417,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1475,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1530,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1576,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1597,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1616,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1633,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1654,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1671,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1688,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1705,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1722,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/routes.ts",
      "line_number": 1735,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1080,
      "description": "Loose typing: async getAppointmentsByTherapistTimeframe(therapistId: string, timeframe: 'week' | 'month' | 'quarter'): Promise<any[]> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1118,
      "description": "Loose typing: async getAppointmentsByClientId(clientId: string): Promise<any[]> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1143,
      "description": "Loose typing: async getClientOutcomesByTherapist(therapistId: string): Promise<any[]> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1258,
      "description": "Loose typing: async getProgressNotes(therapistId: string): Promise<any[]> {",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 79,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 140,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 602,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 996,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1022,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1061,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1100,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1125,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1150,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1178,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "server/storage.ts",
      "line_number": 1269,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/dashboard/todays-sessions.tsx",
      "line_number": 15,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/calendar/AppointmentSummary.tsx",
      "line_number": 167,
      "description": "Non-null assertion operator (!) usage",
      "recommendation": "Add proper null checks instead of using !",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/calendar/DailyView.tsx",
      "line_number": 109,
      "description": "Debug logging (should be removed in production): console.log('Loaded existing session notes:', latestNote.content);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/calendar/DailyView.tsx",
      "line_number": 126,
      "description": "Debug logging (should be removed in production): console.log('Saving session notes for event:', selectedEvent.id);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/calendar/DailyView.tsx",
      "line_number": 138,
      "description": "Debug logging (should be removed in production): console.log('Save response status:', response.status);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/calendar/DailyView.tsx",
      "line_number": 142,
      "description": "Debug logging (should be removed in production): console.log('Session notes saved successfully:', result);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/calendar/DailyView.tsx",
      "line_number": 153,
      "description": "Debug logging (should be removed in production): console.log('Notes saved and UI updated');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/calendar/WeeklyCalendarGrid.tsx",
      "line_number": 28,
      "description": "Debug logging (should be removed in production): console.log('Total events after conversion:', events.length);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/calendar/WeeklyCalendarGrid.tsx",
      "line_number": 29,
      "description": "Debug logging (should be removed in production): console.log('Sample events:', events.slice(0, 2));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/calendar/WeeklyCalendarGrid.tsx",
      "line_number": 140,
      "description": "Debug logging (should be removed in production): console.log('WeeklyCalendarGrid rendering with:', {",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/insights/EnhancedInsightsPanel.tsx",
      "line_number": 51,
      "description": "Loose typing: onCreateActionItems: (actions: any[]) => void;",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/insights/EnhancedInsightsPanel.tsx",
      "line_number": 51,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "critical",
      "file_path": "client/src/components/forms/DocumentUploadZone.tsx",
      "line_number": 178,
      "description": "Invalid UUID format: therapistId: 'therapist-1', // Add default therapist ID",
      "recommendation": "Fix invalid uuid format in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/forms/DocumentUploadZone.tsx",
      "line_number": 29,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/forms/ClientForm.tsx",
      "line_number": 78,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/forms/ClientForm.tsx",
      "line_number": 98,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/clients/ClientListGenerator.tsx",
      "line_number": 65,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/clients/QuickClientUpdate.tsx",
      "line_number": 75,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/clients/RealClientImporter.tsx",
      "line_number": 86,
      "description": "Loose typing: const [results, setResults] = useState<{ success: number; errors: number; details: any[] }>({ success: 0, errors: 0, details: [] });",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/clients/RealClientImporter.tsx",
      "line_number": 96,
      "description": "Loose typing: const successfulImports: any[] = [];",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/components/clients/RealClientImporter.tsx",
      "line_number": 97,
      "description": "Loose typing: const failedImports: any[] = [];",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/clients/RealClientImporter.tsx",
      "line_number": 86,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/clients/RealClientImporter.tsx",
      "line_number": 96,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/clients/RealClientImporter.tsx",
      "line_number": 97,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/components/clients/RealClientImporter.tsx",
      "line_number": 123,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/oauth-simple.tsx",
      "line_number": 6,
      "description": "Debug logging (should be removed in production): console.log('Redirecting to Google OAuth...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/oauth-simple.tsx",
      "line_number": 14,
      "description": "Debug logging (should be removed in production): console.log('Connection status:', data);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "critical",
      "file_path": "client/src/pages/ai-insights.tsx",
      "line_number": 23,
      "description": "Invalid UUID format: const therapistId = \"therapist-1\";",
      "recommendation": "Fix invalid uuid format in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "critical",
      "file_path": "client/src/pages/progress-notes.tsx",
      "line_number": 36,
      "description": "Invalid UUID format: const response = await fetch('/api/progress-notes/therapist-1');",
      "recommendation": "Fix invalid uuid format in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar-integration.tsx",
      "line_number": 30,
      "description": "Loose typing: attendees?: any[];",
      "recommendation": "Fix loose typing in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/calendar-integration.tsx",
      "line_number": 30,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/oauth-debug.tsx",
      "line_number": 37,
      "description": "Debug logging (should be removed in production): console.log('Initiating Google OAuth test...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/oauth-test-simple.tsx",
      "line_number": 36,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/oauth-test-simple.tsx",
      "line_number": 50,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/oauth-test-simple.tsx",
      "line_number": 56,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/oauth-test-simple.tsx",
      "line_number": 71,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/oauth-test-simple.tsx",
      "line_number": 78,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/oauth-quick-test.tsx",
      "line_number": 25,
      "description": "Debug logging (should be removed in production): console.log('Starting OAuth flow...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/oauth-quick-test.tsx",
      "line_number": 33,
      "description": "Debug logging (should be removed in production): console.log('Calendar test result:', data);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 38,
      "description": "Debug logging (should be removed in production): console.log('Initiating Google Calendar connection...');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 65,
      "description": "Debug logging (should be removed in production): console.log('Starting calendar fetch for week:', getWeekRangeString(currentWeek, weekEnd));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 71,
      "description": "Debug logging (should be removed in production): console.log('Fetching events for week range:', weekStart, 'to', weekEndISO);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 75,
      "description": "Debug logging (should be removed in production): console.log('Week response status:', weekResponse.status, 'for range:', weekStart, 'to', weekEndISO);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 79,
      "description": "Debug logging (should be removed in production): console.log('Week events from API:', weekEvents.length);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 97,
      "description": "Debug logging (should be removed in production): console.log('Today response status:', todayResponse.status);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 101,
      "description": "Debug logging (should be removed in production): console.log('Today events from API:', todayEvents.length);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 120,
      "description": "Debug logging (should be removed in production): console.log('Successfully converted', convertedEvents.length, 'events');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 252,
      "description": "Debug logging (should be removed in production): console.log(`Total events after conversion: ${calendarEvents.length}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 253,
      "description": "Debug logging (should be removed in production): console.log(`Current week: ${currentWeek.toDateString()} to ${weekEnd.toDateString()}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 257,
      "description": "Debug logging (should be removed in production): console.log('Sample events:', calendarEvents.slice(0, 3).map(e => ({",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 272,
      "description": "Debug logging (should be removed in production): console.log('Events by week (showing first 5 weeks):', Object.entries(eventsByWeek).slice(0, 5));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 285,
      "description": "Debug logging (should be removed in production): console.log(`${date.toDateString()}: ${dayEvents.length} events`, dayEvents.map(e => e.title));",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 298,
      "description": "Debug logging (should be removed in production): console.log(`Events for current week (${currentWeek.toDateString()} - ${weekEnd.toDateString()}): ${weekEventCount}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 323,
      "description": "Debug logging (should be removed in production): console.log(`Time slot clicked: ${date.toDateString()} at ${time}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 332,
      "description": "Debug logging (should be removed in production): console.log(`Moving event ${eventId} to ${newStartTime.toISOString()}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 338,
      "description": "Debug logging (should be removed in production): console.log('Creating new appointment');",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Code Quality",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 381,
      "description": "Debug logging (should be removed in production): console.log(`Opening session notes for event ${event.id}`);",
      "recommendation": "Fix debug logging (should be removed in production) in this line",
      "auto_fixable": true
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 82,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 104,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 190,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 236,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "Type Safety",
      "severity": "medium",
      "file_path": "client/src/pages/calendar.tsx",
      "line_number": 515,
      "description": "Usage of 'any' type reduces type safety",
      "recommendation": "Replace 'any' with specific type definitions",
      "auto_fixable": false
    },
    {
      "category": "OAuth",
      "severity": "high",
      "file_path": "server/oauth-simple.ts",
      "line_number": 0,
      "description": "Missing OAuth component: getAccessToken",
      "recommendation": "Implement getAccessToken method in OAuth class",
      "auto_fixable": false
    },
    {
      "category": "Dependencies",
      "severity": "medium",
      "file_path": "package.json",
      "line_number": 0,
      "description": "Large number of dependencies (81)",
      "recommendation": "Review and remove unused dependencies",
      "auto_fixable": false
    }
  ],
  "file_analysis": {
    "drizzle.config.ts": {
      "imports": 1,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { defineConfig } from \"drizzle-kit\";"
        ]
      ],
      "export_details": [
        [
          7,
          "export default defineConfig({"
        ]
      ]
    },
    "tailwind.config.ts": {
      "imports": 1,
      "exports": 1,
      "import_details": [
        [
          1,
          "import type { Config } from \"tailwindcss\";"
        ]
      ],
      "export_details": [
        [
          3,
          "export default {"
        ]
      ]
    },
    "vite.config.ts": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { defineConfig } from \"vite\";"
        ],
        [
          2,
          "import react from \"@vitejs/plugin-react\";"
        ],
        [
          3,
          "import path from \"path\";"
        ],
        [
          4,
          "import runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";"
        ]
      ],
      "export_details": [
        [
          6,
          "export default defineConfig({"
        ]
      ]
    },
    "populate-clients.ts": {
      "imports": 4,
      "exports": 0,
      "import_details": [
        [
          2,
          "import { db } from \"./server/db\";"
        ],
        [
          3,
          "import { clients } from \"./shared/schema\";"
        ],
        [
          4,
          "import { eq } from \"drizzle-orm\";"
        ],
        [
          5,
          "import { randomUUID } from 'crypto';"
        ]
      ],
      "export_details": []
    },
    "shared/schema.ts": {
      "imports": 5,
      "exports": 71,
      "import_details": [
        [
          1,
          "import { sql } from \"drizzle-orm\";"
        ],
        [
          2,
          "import { pgTable, text, varchar, timestamp, integer, boolean, jsonb, uuid, decimal, index } from \"drizzle-orm/pg-core\";"
        ],
        [
          3,
          "import { relations } from \"drizzle-orm\";"
        ],
        [
          4,
          "import { createInsertSchema } from \"drizzle-zod\";"
        ],
        [
          5,
          "import { z } from \"zod\";"
        ]
      ],
      "export_details": [
        [
          7,
          "export const users = pgTable(\"users\", {"
        ],
        [
          32,
          "export const clients = pgTable(\"clients\", {"
        ],
        [
          66,
          "export const appointments = pgTable(\"appointments\", {"
        ],
        [
          102,
          "export const sessionNotes = pgTable(\"session_notes\", {"
        ],
        [
          116,
          "export const actionItems = pgTable(\"action_items\", {"
        ],
        [
          130,
          "export const treatmentPlans = pgTable(\"treatment_plans\", {"
        ],
        [
          144,
          "export const aiInsights = pgTable(\"ai_insights\", {"
        ],
        [
          162,
          "export const billingRecords = pgTable(\"billing_records\", {"
        ],
        [
          188,
          "export const assessments = pgTable(\"assessments\", {"
        ],
        [
          211,
          "export const progressNotes = pgTable(\"progress_notes\", {"
        ],
        [
          248,
          "export const medications = pgTable(\"medications\", {"
        ],
        [
          269,
          "export const communicationLogs = pgTable(\"communication_logs\", {"
        ],
        [
          288,
          "export const documents = pgTable(\"documents\", {"
        ],
        [
          308,
          "export const auditLogs = pgTable(\"audit_logs\", {"
        ],
        [
          325,
          "export const calendarEvents = pgTable(\"calendar_events\", {"
        ],
        [
          356,
          "export const usersRelations = relations(users, ({ many }) => ({"
        ],
        [
          371,
          "export const clientsRelations = relations(clients, ({ one, many }) => ({"
        ],
        [
          389,
          "export const appointmentsRelations = relations(appointments, ({ one, many }) => ({"
        ],
        [
          404,
          "export const sessionNotesRelations = relations(sessionNotes, ({ one }) => ({"
        ],
        [
          419,
          "export const actionItemsRelations = relations(actionItems, ({ one }) => ({"
        ],
        [
          430,
          "export const treatmentPlansRelations = relations(treatmentPlans, ({ one }) => ({"
        ],
        [
          441,
          "export const aiInsightsRelations = relations(aiInsights, ({ one }) => ({"
        ],
        [
          453,
          "export const billingRecordsRelations = relations(billingRecords, ({ one }) => ({"
        ],
        [
          468,
          "export const assessmentsRelations = relations(assessments, ({ one }) => ({"
        ],
        [
          483,
          "export const progressNotesRelations = relations(progressNotes, ({ one }) => ({"
        ],
        [
          502,
          "export const medicationsRelations = relations(medications, ({ one }) => ({"
        ],
        [
          509,
          "export const communicationLogsRelations = relations(communicationLogs, ({ one }) => ({"
        ],
        [
          520,
          "export const documentsRelations = relations(documents, ({ one }) => ({"
        ],
        [
          531,
          "export const auditLogsRelations = relations(auditLogs, ({ one }) => ({"
        ],
        [
          539,
          "export const insertUserSchema = createInsertSchema(users).pick({"
        ],
        [
          547,
          "export const insertClientSchema = createInsertSchema(clients).omit({"
        ],
        [
          553,
          "export const insertAppointmentSchema = createInsertSchema(appointments).omit({"
        ],
        [
          559,
          "export const insertSessionNoteSchema = createInsertSchema(sessionNotes).omit({"
        ],
        [
          565,
          "export const insertActionItemSchema = createInsertSchema(actionItems).omit({"
        ],
        [
          571,
          "export const insertTreatmentPlanSchema = createInsertSchema(treatmentPlans).omit({"
        ],
        [
          577,
          "export const insertAiInsightSchema = createInsertSchema(aiInsights).omit({"
        ],
        [
          583,
          "export const insertBillingRecordSchema = createInsertSchema(billingRecords).omit({"
        ],
        [
          589,
          "export const insertAssessmentSchema = createInsertSchema(assessments).omit({"
        ],
        [
          595,
          "export const insertProgressNoteSchema = createInsertSchema(progressNotes).omit({"
        ],
        [
          601,
          "export const insertMedicationSchema = createInsertSchema(medications).omit({"
        ],
        [
          607,
          "export const insertCommunicationLogSchema = createInsertSchema(communicationLogs).omit({"
        ],
        [
          612,
          "export const insertDocumentSchema = createInsertSchema(documents).omit({"
        ],
        [
          618,
          "export const insertAuditLogSchema = createInsertSchema(auditLogs).omit({"
        ],
        [
          624,
          "export type User = typeof users.$inferSelect;"
        ],
        [
          625,
          "export type InsertUser = z.infer<typeof insertUserSchema>;"
        ],
        [
          626,
          "export type Client = typeof clients.$inferSelect;"
        ],
        [
          627,
          "export type InsertClient = z.infer<typeof insertClientSchema>;"
        ],
        [
          628,
          "export type Appointment = typeof appointments.$inferSelect;"
        ],
        [
          629,
          "export type InsertAppointment = z.infer<typeof insertAppointmentSchema>;"
        ],
        [
          630,
          "export type SessionNote = typeof sessionNotes.$inferSelect;"
        ],
        [
          631,
          "export type InsertSessionNote = z.infer<typeof insertSessionNoteSchema>;"
        ],
        [
          632,
          "export type ActionItem = typeof actionItems.$inferSelect;"
        ],
        [
          633,
          "export type InsertActionItem = z.infer<typeof insertActionItemSchema>;"
        ],
        [
          634,
          "export type TreatmentPlan = typeof treatmentPlans.$inferSelect;"
        ],
        [
          635,
          "export type InsertTreatmentPlan = z.infer<typeof insertTreatmentPlanSchema>;"
        ],
        [
          636,
          "export type AiInsight = typeof aiInsights.$inferSelect;"
        ],
        [
          637,
          "export type InsertAiInsight = z.infer<typeof insertAiInsightSchema>;"
        ],
        [
          640,
          "export type BillingRecord = typeof billingRecords.$inferSelect;"
        ],
        [
          641,
          "export type InsertBillingRecord = z.infer<typeof insertBillingRecordSchema>;"
        ],
        [
          642,
          "export type Assessment = typeof assessments.$inferSelect;"
        ],
        [
          643,
          "export type InsertAssessment = z.infer<typeof insertAssessmentSchema>;"
        ],
        [
          644,
          "export type ProgressNote = typeof progressNotes.$inferSelect;"
        ],
        [
          645,
          "export type InsertProgressNote = z.infer<typeof insertProgressNoteSchema>;"
        ],
        [
          646,
          "export type Medication = typeof medications.$inferSelect;"
        ],
        [
          647,
          "export type InsertMedication = z.infer<typeof insertMedicationSchema>;"
        ],
        [
          648,
          "export type CommunicationLog = typeof communicationLogs.$inferSelect;"
        ],
        [
          649,
          "export type InsertCommunicationLog = z.infer<typeof insertCommunicationLogSchema>;"
        ],
        [
          650,
          "export type Document = typeof documents.$inferSelect;"
        ],
        [
          651,
          "export type InsertDocument = z.infer<typeof insertDocumentSchema>;"
        ],
        [
          652,
          "export type AuditLog = typeof auditLogs.$inferSelect;"
        ],
        [
          653,
          "export type InsertAuditLog = z.infer<typeof insertAuditLogSchema>;"
        ]
      ]
    },
    "client/src/hooks/use-toast.ts": {
      "imports": 2,
      "exports": 2,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          3,
          "import type {"
        ]
      ],
      "export_details": [
        [
          74,
          "export const reducer = (state: State, action: Action): State => {"
        ],
        [
          191,
          "export { useToast, toast }"
        ]
      ]
    },
    "client/src/lib/utils.ts": {
      "imports": 2,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { clsx, type ClassValue } from \"clsx\""
        ],
        [
          2,
          "import { twMerge } from \"tailwind-merge\""
        ]
      ],
      "export_details": [
        [
          4,
          "export function cn(...inputs: ClassValue[]) {"
        ]
      ]
    },
    "client/src/lib/queryClient.ts": {
      "imports": 1,
      "exports": 3,
      "import_details": [
        [
          1,
          "import { QueryClient, QueryFunction } from \"@tanstack/react-query\";"
        ]
      ],
      "export_details": [
        [
          10,
          "export async function apiRequest("
        ],
        [
          27,
          "export const getQueryFn: <T>(options: {"
        ],
        [
          44,
          "export const queryClient = new QueryClient({"
        ]
      ]
    },
    "client/src/lib/googleCalendar.ts": {
      "imports": 0,
      "exports": 2,
      "import_details": [],
      "export_details": [
        [
          2,
          "export interface GoogleCalendarEvent {"
        ],
        [
          22,
          "export class GoogleCalendarAPI {"
        ]
      ]
    },
    "client/src/lib/api.ts": {
      "imports": 1,
      "exports": 8,
      "import_details": [
        [
          1,
          "import { apiRequest } from \"./queryClient\";"
        ]
      ],
      "export_details": [
        [
          3,
          "export interface DashboardStats {"
        ],
        [
          12,
          "export interface Client {"
        ],
        [
          42,
          "export interface Appointment {"
        ],
        [
          52,
          "export interface ActionItem {"
        ],
        [
          62,
          "export interface AiInsight {"
        ],
        [
          72,
          "export interface SessionNote {"
        ],
        [
          86,
          "export interface ApiStatus {"
        ],
        [
          93,
          "export class ApiClient {"
        ]
      ]
    },
    "client/src/utils/dateUtils.ts": {
      "imports": 0,
      "exports": 10,
      "import_details": [],
      "export_details": [
        [
          1,
          "export function formatDateShort(date: Date): string {"
        ],
        [
          8,
          "export function formatDateLong(date: Date): string {"
        ],
        [
          17,
          "export function getWeekStart(date: Date): Date {"
        ],
        [
          26,
          "export function getWeekEnd(date: Date): Date {"
        ],
        [
          34,
          "export function getWeekDays(weekStart: Date): Date[] {"
        ],
        [
          44,
          "export function isToday(date: Date): boolean {"
        ],
        [
          49,
          "export function isSameDay(date1: Date, date2: Date): boolean {"
        ],
        [
          53,
          "export function getWeekRangeString(weekStart: Date, weekEnd: Date): string {"
        ],
        [
          68,
          "export function addWeeks(date: Date, weeks: number): Date {"
        ],
        [
          74,
          "export function isCurrentWeek(weekStart: Date): boolean {"
        ]
      ]
    },
    "client/src/utils/calendarExport.ts": {
      "imports": 5,
      "exports": 6,
      "import_details": [
        [
          1,
          "import jsPDF from 'jspdf';"
        ],
        [
          2,
          "import { CalendarEvent } from '../types/calendar';"
        ],
        [
          3,
          "import { cleanEventTitle, sanitizeForPDF } from './textCleaner';"
        ],
        [
          4,
          "import { formatDateLong, formatDateShort } from './dateUtils';"
        ],
        [
          5,
          "import { getLocationDisplay } from './locationUtils';"
        ]
      ],
      "export_details": [
        [
          7,
          "export interface CalendarExportConfig {"
        ],
        [
          27,
          "export const THERAPY_WEEKLY_CONFIG: CalendarExportConfig = {"
        ],
        [
          46,
          "export const THERAPY_DAILY_CONFIG: CalendarExportConfig = {"
        ],
        [
          323,
          "export function exportWeeklyCalendar(events: CalendarEvent[], weekStart: Date, weekEnd: Date): void {"
        ],
        [
          346,
          "export function exportDailyCalendar(events: CalendarEvent[], date: Date): void {"
        ],
        [
          369,
          "export function exportAppointmentList(events: CalendarEvent[], startDate: Date, endDate: Date): void {"
        ]
      ]
    },
    "client/src/utils/textCleaner.ts": {
      "imports": 0,
      "exports": 5,
      "import_details": [],
      "export_details": [
        [
          2,
          "export function cleanEventTitle(title: string): string {"
        ],
        [
          14,
          "export function cleanSessionNotes(notes: string): string {"
        ],
        [
          24,
          "export function truncateText(text: string, maxLength: number): string {"
        ],
        [
          29,
          "export function formatClientName(name: string): string {"
        ],
        [
          41,
          "export function sanitizeForPDF(text: string): string {"
        ]
      ]
    },
    "client/src/utils/textWrappers.ts": {
      "imports": 0,
      "exports": 4,
      "import_details": [],
      "export_details": [
        [
          3,
          "export function wrapText(text: string, maxLength: number): string[] {"
        ],
        [
          30,
          "export function truncateWithEllipsis(text: string, maxLength: number): string {"
        ],
        [
          38,
          "export function wrapTextForCalendarEvent(title: string, maxLength: number = 15): string {"
        ],
        [
          45,
          "export function formatEventText(event: CalendarEvent): string {"
        ]
      ]
    },
    "client/src/utils/perfectDashboardExport.ts": {
      "imports": 3,
      "exports": 2,
      "import_details": [
        [
          1,
          "import jsPDF from 'jspdf';"
        ],
        [
          2,
          "import { CalendarEvent } from '../types/calendar';"
        ],
        [
          3,
          "import { cleanEventTitle } from './textCleaner';"
        ]
      ],
      "export_details": [
        [
          181,
          "export function exportPerfectWeeklyView("
        ],
        [
          336,
          "export function exportPerfectDailyView(events: CalendarEvent[], date: Date): void {"
        ]
      ]
    },
    "client/src/utils/locationUtils.ts": {
      "imports": 0,
      "exports": 4,
      "import_details": [],
      "export_details": [
        [
          3,
          "export function getLocationDisplay(location?: string): string {"
        ],
        [
          10,
          "export function getLocationIcon(location?: string): string {"
        ],
        [
          26,
          "export function formatLocationForPDF(location?: string): string {"
        ],
        [
          36,
          "export function getLocationTypeColor(location?: string): string {"
        ]
      ]
    },
    "client/src/utils/currentWeeklyExport.ts": {
      "imports": 2,
      "exports": 3,
      "import_details": [
        [
          1,
          "import jsPDF from 'jspdf';"
        ],
        [
          2,
          "import { CalendarEvent } from '../types/calendar';"
        ]
      ],
      "export_details": [
        [
          9,
          "export interface CurrentWeeklyExportConfig {"
        ],
        [
          29,
          "export const CURRENT_WEEKLY_CONFIG: CurrentWeeklyExportConfig = {"
        ],
        [
          48,
          "export const exportCurrentWeeklyView = ("
        ]
      ]
    },
    "client/src/utils/aiServices.ts": {
      "imports": 0,
      "exports": 6,
      "import_details": [],
      "export_details": [
        [
          5,
          "export interface AIAnalysisResult {"
        ],
        [
          13,
          "export interface SessionTranscriptAnalysis {"
        ],
        [
          97,
          "export async function analyzeContent(content: string, type: 'session' | 'appointment' | 'progress' = 'session'): Promise<AIAnalysisResult> {"
        ],
        [
          123,
          "export async function analyzeSessionTranscript(transcript: string): Promise<SessionTranscriptAnalysis> {"
        ],
        [
          153,
          "export async function generateAppointmentInsights(appointments: any[]): Promise<AIAnalysisResult> {"
        ],
        [
          167,
          "export async function generateProgressInsights(clientData: any): Promise<AIAnalysisResult> {"
        ]
      ]
    },
    "client/src/utils/pdfExport.ts": {
      "imports": 1,
      "exports": 2,
      "import_details": [
        [
          1,
          "import jsPDF from 'jspdf';"
        ]
      ],
      "export_details": [
        [
          18,
          "export async function exportToPDF(options: PDFExportOptions): Promise<void> {"
        ],
        [
          171,
          "export async function exportDailyToPDF(options: {"
        ]
      ]
    },
    "client/src/utils/timeSlots.ts": {
      "imports": 0,
      "exports": 7,
      "import_details": [],
      "export_details": [
        [
          1,
          "export interface TimeSlot {"
        ],
        [
          7,
          "export function generateTimeSlots(): TimeSlot[] {"
        ],
        [
          30,
          "export function getEventDurationInSlots(startTime: Date, endTime: Date): number {"
        ],
        [
          36,
          "export function isEventInTimeSlot(event: any, timeSlot: TimeSlot): boolean {"
        ],
        [
          67,
          "export function isEventInTimeSlotLegacy(eventStart: Date, eventEnd: Date, slotHour: number, slotMinute: number): boolean {"
        ],
        [
          77,
          "export function formatTimeSlot(hour: number, minute: number): string {"
        ],
        [
          83,
          "export function getTimeSlotPosition(eventTime: Date): { hour: number; minute: number } {"
        ]
      ]
    },
    "client/src/utils/errorHandler.ts": {
      "imports": 0,
      "exports": 3,
      "import_details": [],
      "export_details": [
        [
          2,
          "export function setupGlobalErrorHandling() {"
        ],
        [
          21,
          "export async function safeJsonParse(response: Response) {"
        ],
        [
          33,
          "export function handleApiError(error: any): string {"
        ]
      ]
    },
    "client/src/types/calendar.ts": {
      "imports": 0,
      "exports": 8,
      "import_details": [],
      "export_details": [
        [
          1,
          "export interface CalendarEvent {"
        ],
        [
          23,
          "export interface CalendarDay {"
        ],
        [
          30,
          "export interface WeekView {"
        ],
        [
          37,
          "export interface AppointmentStats {"
        ],
        [
          46,
          "export interface CalendarFilters {"
        ],
        [
          56,
          "export interface CalendarPreferences {"
        ],
        [
          65,
          "export interface EventConflict {"
        ],
        [
          72,
          "export interface CalendarExportOptions {"
        ]
      ]
    },
    "server/vite.ts": {
      "imports": 7,
      "exports": 3,
      "import_details": [
        [
          1,
          "import express, { type Express } from \"express\";"
        ],
        [
          2,
          "import fs from \"fs\";"
        ],
        [
          3,
          "import path from \"path\";"
        ],
        [
          4,
          "import { createServer as createViteServer, createLogger } from \"vite\";"
        ],
        [
          5,
          "import { type Server } from \"http\";"
        ],
        [
          6,
          "import viteConfig from \"../vite.config\";"
        ],
        [
          7,
          "import { nanoid } from \"nanoid\";"
        ]
      ],
      "export_details": [
        [
          11,
          "export function log(message: string, source = \"express\") {"
        ],
        [
          22,
          "export async function setupVite(app: Express, server: Server) {"
        ],
        [
          70,
          "export function serveStatic(app: Express) {"
        ]
      ]
    },
    "server/index.ts": {
      "imports": 3,
      "exports": 0,
      "import_details": [
        [
          1,
          "import express, { type Request, Response, NextFunction } from \"express\";"
        ],
        [
          2,
          "import { registerRoutes } from \"./routes\";"
        ],
        [
          3,
          "import { setupVite, serveStatic, log } from \"./vite\";"
        ]
      ],
      "export_details": []
    },
    "server/db.ts": {
      "imports": 4,
      "exports": 2,
      "import_details": [
        [
          1,
          "import { Pool, neonConfig } from '@neondatabase/serverless';"
        ],
        [
          2,
          "import { drizzle } from 'drizzle-orm/neon-serverless';"
        ],
        [
          3,
          "import ws from \"ws\";"
        ],
        [
          4,
          "import * as schema from \"@shared/schema\";"
        ]
      ],
      "export_details": [
        [
          14,
          "export const pool = new Pool({ connectionString: process.env.DATABASE_URL });"
        ],
        [
          15,
          "export const db = drizzle({ client: pool, schema });"
        ]
      ]
    },
    "server/ai-services.ts": {
      "imports": 2,
      "exports": 6,
      "import_details": [
        [
          1,
          "import OpenAI from 'openai';"
        ],
        [
          2,
          "import Anthropic from '@anthropic-ai/sdk';"
        ]
      ],
      "export_details": [
        [
          20,
          "export interface AIAnalysisResult {"
        ],
        [
          28,
          "export interface SessionTranscriptAnalysis {"
        ],
        [
          106,
          "export async function analyzeContent(content: string, type: 'session' | 'appointment' | 'progress' = 'session'): Promise<AIAnalysisResult> {"
        ],
        [
          132,
          "export async function analyzeSessionTranscript(transcript: string): Promise<SessionTranscriptAnalysis> {"
        ],
        [
          188,
          "export async function generateAppointmentInsights(appointments: any[]): Promise<AIAnalysisResult> {"
        ],
        [
          202,
          "export async function generateProgressInsights(clientData: any): Promise<AIAnalysisResult> {"
        ]
      ]
    },
    "server/auth-old.ts": {
      "imports": 2,
      "exports": 3,
      "import_details": [
        [
          2,
          "import { google } from 'googleapis';"
        ],
        [
          4,
          "import { OAuth2Client } from 'google-auth-library';"
        ]
      ],
      "export_details": [
        [
          22,
          "export interface GoogleCalendarEvent {"
        ],
        [
          42,
          "export class GoogleCalendarService {"
        ],
        [
          228,
          "export const googleCalendarService = new GoogleCalendarService();"
        ]
      ]
    },
    "server/ai-insights.ts": {
      "imports": 1,
      "exports": 1,
      "import_details": [
        [
          1,
          "import OpenAI from 'openai';"
        ]
      ],
      "export_details": [
        [
          19,
          "export async function generateAppointmentInsights(appointment: AppointmentData) {"
        ]
      ]
    },
    "server/ai-enhanced-insights.ts": {
      "imports": 2,
      "exports": 3,
      "import_details": [
        [
          1,
          "import OpenAI from 'openai';"
        ],
        [
          2,
          "import { storage } from './storage';"
        ]
      ],
      "export_details": [
        [
          52,
          "export async function generateEnhancedInsights(request: EnhancedInsightsRequest): Promise<EnhancedInsights> {"
        ],
        [
          176,
          "export async function generateProgressReport(clientId: string, timeframe: 'week' | 'month' | 'quarter'): Promise<any> {"
        ],
        [
          234,
          "export async function assessClientRisk(sessionContent: string, clientHistory?: string[]): Promise<any> {"
        ]
      ]
    },
    "server/ai-predictive-models.ts": {
      "imports": 2,
      "exports": 3,
      "import_details": [
        [
          1,
          "import OpenAI from 'openai';"
        ],
        [
          2,
          "import { storage } from './storage';"
        ]
      ],
      "export_details": [
        [
          7,
          "export async function predictTreatmentOutcome(clientId: string, currentSessionCount: number): Promise<any> {"
        ],
        [
          79,
          "export async function generateRiskEscalationAlert(clientId: string, currentSessionContent: string): Promise<any> {"
        ],
        [
          139,
          "export async function determineOptimalInterventionTiming(clientId: string, potentialInterventions: string[]): Promise<any> {"
        ]
      ]
    },
    "server/ai-pattern-recognition.ts": {
      "imports": 2,
      "exports": 3,
      "import_details": [
        [
          1,
          "import OpenAI from 'openai';"
        ],
        [
          2,
          "import { storage } from './storage';"
        ]
      ],
      "export_details": [
        [
          7,
          "export async function analyzeCrossClientPatterns(therapistId: string): Promise<any> {"
        ],
        [
          76,
          "export async function detectSeasonalCyclicalPatterns(clientId: string): Promise<any> {"
        ],
        [
          141,
          "export async function mapTherapeuticRelationship(clientId: string, therapistId: string): Promise<any> {"
        ]
      ]
    },
    "server/ai-personalized-therapy.ts": {
      "imports": 2,
      "exports": 3,
      "import_details": [
        [
          1,
          "import OpenAI from 'openai';"
        ],
        [
          2,
          "import { storage } from './storage';"
        ]
      ],
      "export_details": [
        [
          7,
          "export async function generateEvidenceBasedInterventions(clientProfile: any, sessionHistory: any[]): Promise<any> {"
        ],
        [
          73,
          "export async function createPersonalizedHomework(clientId: string, sessionContent: string, clientPreferences: any): Promise<any> {"
        ],
        [
          147,
          "export async function curateTherapeuticResources(clientProfile: any, currentChallenges: string[]): Promise<any> {"
        ]
      ]
    },
    "server/perplexity.ts": {
      "imports": 0,
      "exports": 2,
      "import_details": [],
      "export_details": [
        [
          27,
          "export class PerplexityClient {"
        ],
        [
          157,
          "export const perplexityClient = new PerplexityClient(process.env.PERPLEXITY_API_KEY || '');"
        ]
      ]
    },
    "server/ai-practice-intelligence.ts": {
      "imports": 2,
      "exports": 4,
      "import_details": [
        [
          1,
          "import OpenAI from 'openai';"
        ],
        [
          2,
          "import { storage } from './storage';"
        ]
      ],
      "export_details": [
        [
          7,
          "export async function analyzeSessionEfficiency(therapistId: string, timeframe: 'week' | 'month' | 'quarter'): Promise<any> {"
        ],
        [
          83,
          "export async function predictClientRetention(clientId: string): Promise<any> {"
        ],
        [
          161,
          "export async function analyzeTherapistStrengths(therapistId: string): Promise<any> {"
        ],
        [
          240,
          "export async function generateContinuingEducationRecommendations(therapistId: string, clientMix: any[]): Promise<any> {"
        ]
      ]
    },
    "server/ai-multi-model.ts": {
      "imports": 4,
      "exports": 3,
      "import_details": [
        [
          1,
          "import OpenAI from 'openai';"
        ],
        [
          2,
          "import Anthropic from '@anthropic-ai/sdk';"
        ],
        [
          3,
          "import { GoogleGenAI } from '@google/genai';"
        ],
        [
          4,
          "import { perplexityClient } from './perplexity';"
        ]
      ],
      "export_details": [
        [
          11,
          "export interface AIResponse {"
        ],
        [
          18,
          "export class MultiModelAI {"
        ],
        [
          219,
          "export const multiModelAI = new MultiModelAI();"
        ]
      ]
    },
    "server/health-check.ts": {
      "imports": 3,
      "exports": 5,
      "import_details": [
        [
          1,
          "import { GoogleGenAI } from \"@google/genai\";"
        ],
        [
          2,
          "import { OpenAI } from 'openai';"
        ],
        [
          3,
          "import { Anthropic } from '@anthropic-ai/sdk';"
        ]
      ],
      "export_details": [
        [
          12,
          "export async function checkPerplexityHealth(): Promise<ApiHealthStatus> {"
        ],
        [
          51,
          "export async function checkGeminiHealth(): Promise<ApiHealthStatus> {"
        ],
        [
          81,
          "export async function checkOpenAIHealth(): Promise<ApiHealthStatus> {"
        ],
        [
          112,
          "export async function checkAnthropicHealth(): Promise<ApiHealthStatus> {"
        ],
        [
          143,
          "export async function getAllApiStatuses(): Promise<ApiHealthStatus[]> {"
        ]
      ]
    },
    "server/auth.ts": {
      "imports": 3,
      "exports": 3,
      "import_details": [
        [
          1,
          "import { google } from 'googleapis';"
        ],
        [
          2,
          "import { OAuth2Client } from 'google-auth-library';"
        ],
        [
          3,
          "import { pool } from './db';"
        ]
      ],
      "export_details": [
        [
          38,
          "export interface GoogleCalendarEvent {"
        ],
        [
          58,
          "export class GoogleCalendarService {"
        ],
        [
          494,
          "export const googleCalendarService = new GoogleCalendarService();"
        ]
      ]
    },
    "server/oauth-simple.ts": {
      "imports": 3,
      "exports": 2,
      "import_details": [
        [
          1,
          "import { google } from 'googleapis';"
        ],
        [
          2,
          "import { OAuth2Client } from 'google-auth-library';"
        ],
        [
          3,
          "import path from 'path';"
        ]
      ],
      "export_details": [
        [
          191,
          "export const simpleOAuth = new SimpleOAuth();"
        ],
        [
          192,
          "export { SimpleOAuth };"
        ]
      ]
    },
    "server/vite-backup.ts": {
      "imports": 7,
      "exports": 3,
      "import_details": [
        [
          1,
          "import express, { type Express } from \"express\";"
        ],
        [
          2,
          "import fs from \"fs\";"
        ],
        [
          3,
          "import path from \"path\";"
        ],
        [
          4,
          "import { createServer as createViteServer, createLogger } from \"vite\";"
        ],
        [
          5,
          "import { type Server } from \"http\";"
        ],
        [
          6,
          "import viteConfig from \"../vite.config\";"
        ],
        [
          7,
          "import { nanoid } from \"nanoid\";"
        ]
      ],
      "export_details": [
        [
          11,
          "export function log(message: string, source = \"express\") {"
        ],
        [
          22,
          "export async function setupVite(app: Express, server: Server) {"
        ],
        [
          70,
          "export function serveStatic(app: Express) {"
        ]
      ]
    },
    "server/document-processor.ts": {
      "imports": 6,
      "exports": 4,
      "import_details": [
        [
          1,
          "import fs from 'fs';"
        ],
        [
          2,
          "import path from 'path';"
        ],
        [
          3,
          "import mammoth from 'mammoth';"
        ],
        [
          4,
          "import xlsx from 'xlsx';"
        ],
        [
          5,
          "import sharp from 'sharp';"
        ],
        [
          6,
          "import { multiModelAI } from './ai-multi-model';"
        ]
      ],
      "export_details": [
        [
          34,
          "export interface ProcessedDocument {"
        ],
        [
          42,
          "export interface ProgressNote {"
        ],
        [
          57,
          "export class DocumentProcessor {"
        ],
        [
          866,
          "export const documentProcessor = new DocumentProcessor();"
        ]
      ]
    },
    "server/routes.ts": {
      "imports": 15,
      "exports": 1,
      "import_details": [
        [
          1,
          "import type { Express } from \"express\";"
        ],
        [
          2,
          "import { createServer, type Server } from \"http\";"
        ],
        [
          3,
          "import { storage } from \"./storage\";"
        ],
        [
          4,
          "import { analyzeContent, analyzeSessionTranscript } from \"./ai-services\";"
        ],
        [
          5,
          "import { multiModelAI } from './ai-multi-model';"
        ],
        [
          6,
          "import { perplexityClient } from './perplexity';"
        ],
        [
          7,
          "import { documentProcessor } from './document-processor';"
        ],
        [
          9,
          "import { generateAppointmentInsights } from \"./ai-insights\";"
        ],
        [
          10,
          "import { pool } from \"./db\";"
        ],
        [
          11,
          "import {"
        ],
        [
          15,
          "import { z } from \"zod\";"
        ],
        [
          16,
          "import { randomUUID } from 'crypto';"
        ],
        [
          17,
          "import multer from 'multer';"
        ],
        [
          18,
          "import fs from 'fs';"
        ],
        [
          19,
          "import { getAllApiStatuses } from \"./health-check\";"
        ]
      ],
      "export_details": [
        [
          21,
          "export async function registerRoutes(app: Express): Promise<Server> {"
        ]
      ]
    },
    "server/storage.ts": {
      "imports": 4,
      "exports": 3,
      "import_details": [
        [
          1,
          "import {"
        ],
        [
          12,
          "import { db, pool } from \"./db\";"
        ],
        [
          13,
          "import { eq, desc, and, gte, lte, count } from \"drizzle-orm\";"
        ],
        [
          14,
          "import { randomUUID } from \"crypto\";"
        ]
      ],
      "export_details": [
        [
          16,
          "export interface IStorage {"
        ],
        [
          139,
          "export class DatabaseStorage implements IStorage {"
        ],
        [
          1294,
          "export const storage = new DatabaseStorage();"
        ]
      ]
    },
    "client/src/main.tsx": {
      "imports": 4,
      "exports": 0,
      "import_details": [
        [
          1,
          "import { createRoot } from \"react-dom/client\";"
        ],
        [
          2,
          "import App from \"./App\";"
        ],
        [
          3,
          "import \"./index.css\";"
        ],
        [
          4,
          "import { setupGlobalErrorHandling } from \"./utils/errorHandler\";"
        ]
      ],
      "export_details": []
    },
    "client/src/App.tsx": {
      "imports": 24,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Switch, Route } from \"wouter\";"
        ],
        [
          2,
          "import { queryClient } from \"./lib/queryClient\";"
        ],
        [
          3,
          "import { QueryClientProvider } from \"@tanstack/react-query\";"
        ],
        [
          4,
          "import { Toaster } from \"@/components/ui/toaster\";"
        ],
        [
          5,
          "import { TooltipProvider } from \"@/components/ui/tooltip\";"
        ],
        [
          6,
          "import Dashboard from \"@/pages/dashboard\";"
        ],
        [
          7,
          "import Clients from \"@/pages/clients\";"
        ],
        [
          8,
          "import Appointments from \"@/pages/appointments\";"
        ],
        [
          9,
          "import Calendar from \"@/pages/calendar\";"
        ],
        [
          10,
          "import CalendarIntegration from \"@/pages/calendar-integration\";"
        ],
        [
          11,
          "import GoogleCloudSetup from \"@/pages/google-cloud-setup\";"
        ],
        [
          12,
          "import OAuthDebug from \"@/pages/oauth-debug\";"
        ],
        [
          13,
          "import SessionNotes from \"@/pages/session-notes\";"
        ],
        [
          14,
          "import ActionItems from \"@/pages/action-items\";"
        ],
        [
          15,
          "import Analytics from \"@/pages/analytics\";"
        ],
        [
          16,
          "import AiInsights from \"@/pages/ai-insights\";"
        ],
        [
          17,
          "import Settings from \"@/pages/settings\";"
        ],
        [
          18,
          "import NotFound from \"@/pages/not-found\";"
        ],
        [
          19,
          "import { ProgressNotesPage } from \"@/pages/progress-notes\";"
        ],
        [
          20,
          "import { lazy, Suspense } from \"react\";"
        ],
        [
          26,
          "import Sidebar from \"@/components/layout/sidebar\";"
        ],
        [
          27,
          "import Header from \"@/components/layout/header\";"
        ],
        [
          28,
          "import OAuthTestSimple from './pages/oauth-test-simple';"
        ],
        [
          29,
          "import OAuthQuickTest from './pages/oauth-quick-test';"
        ]
      ],
      "export_details": [
        [
          101,
          "export default App;"
        ]
      ]
    },
    "client/src/hooks/use-mobile.tsx": {
      "imports": 1,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ]
      ],
      "export_details": [
        [
          5,
          "export function useIsMobile() {"
        ]
      ]
    },
    "client/src/components/ui/dialog.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as DialogPrimitive from \"@radix-ui/react-dialog\""
        ],
        [
          5,
          "import { X } from \"lucide-react\""
        ],
        [
          7,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          111,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/resizable.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          3,
          "import { GripVertical } from \"lucide-react\""
        ],
        [
          4,
          "import * as ResizablePrimitive from \"react-resizable-panels\""
        ],
        [
          6,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          45,
          "export { ResizablePanelGroup, ResizablePanel, ResizableHandle }"
        ]
      ]
    },
    "client/src/components/ui/breadcrumb.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import { Slot } from \"@radix-ui/react-slot\""
        ],
        [
          3,
          "import { ChevronRight, MoreHorizontal } from \"lucide-react\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          107,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/separator.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as SeparatorPrimitive from \"@radix-ui/react-separator\""
        ],
        [
          4,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          29,
          "export { Separator }"
        ]
      ]
    },
    "client/src/components/ui/popover.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as PopoverPrimitive from \"@radix-ui/react-popover\""
        ],
        [
          4,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          29,
          "export { Popover, PopoverTrigger, PopoverContent }"
        ]
      ]
    },
    "client/src/components/ui/toast.tsx": {
      "imports": 5,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as ToastPrimitives from \"@radix-ui/react-toast\""
        ],
        [
          3,
          "import { cva, type VariantProps } from \"class-variance-authority\""
        ],
        [
          4,
          "import { X } from \"lucide-react\""
        ],
        [
          6,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          117,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/textarea.tsx": {
      "imports": 2,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          3,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          22,
          "export { Textarea }"
        ]
      ]
    },
    "client/src/components/ui/calendar.tsx": {
      "imports": 5,
      "exports": 2,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import { ChevronLeft, ChevronRight } from \"lucide-react\""
        ],
        [
          3,
          "import { DayPicker } from \"react-day-picker\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ],
        [
          6,
          "import { buttonVariants } from \"@/components/ui/button\""
        ]
      ],
      "export_details": [
        [
          8,
          "export type CalendarProps = React.ComponentProps<typeof DayPicker>"
        ],
        [
          68,
          "export { Calendar }"
        ]
      ]
    },
    "client/src/components/ui/button.tsx": {
      "imports": 4,
      "exports": 2,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import { Slot } from \"@radix-ui/react-slot\""
        ],
        [
          3,
          "import { cva, type VariantProps } from \"class-variance-authority\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          36,
          "export interface ButtonProps"
        ],
        [
          56,
          "export { Button, buttonVariants }"
        ]
      ]
    },
    "client/src/components/ui/avatar.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as AvatarPrimitive from \"@radix-ui/react-avatar\""
        ],
        [
          6,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          50,
          "export { Avatar, AvatarImage, AvatarFallback }"
        ]
      ]
    },
    "client/src/components/ui/drawer.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import { Drawer as DrawerPrimitive } from \"vaul\""
        ],
        [
          6,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          107,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/skeleton.tsx": {
      "imports": 1,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          15,
          "export { Skeleton }"
        ]
      ]
    },
    "client/src/components/ui/slider.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as SliderPrimitive from \"@radix-ui/react-slider\""
        ],
        [
          4,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          26,
          "export { Slider }"
        ]
      ]
    },
    "client/src/components/ui/form.tsx": {
      "imports": 6,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as LabelPrimitive from \"@radix-ui/react-label\""
        ],
        [
          5,
          "import { Slot } from \"@radix-ui/react-slot\""
        ],
        [
          6,
          "import {"
        ],
        [
          15,
          "import { cn } from \"@/lib/utils\""
        ],
        [
          16,
          "import { Label } from \"@/components/ui/label\""
        ]
      ],
      "export_details": [
        [
          169,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/radio-group.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\""
        ],
        [
          3,
          "import { Circle } from \"lucide-react\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          42,
          "export { RadioGroup, RadioGroupItem }"
        ]
      ]
    },
    "client/src/components/ui/toggle.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as TogglePrimitive from \"@radix-ui/react-toggle\""
        ],
        [
          3,
          "import { cva, type VariantProps } from \"class-variance-authority\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          43,
          "export { Toggle, toggleVariants }"
        ]
      ]
    },
    "client/src/components/ui/input.tsx": {
      "imports": 2,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          3,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          22,
          "export { Input }"
        ]
      ]
    },
    "client/src/components/ui/sidebar.tsx": {
      "imports": 12,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import { Slot } from \"@radix-ui/react-slot\""
        ],
        [
          3,
          "import { VariantProps, cva } from \"class-variance-authority\""
        ],
        [
          4,
          "import { PanelLeft } from \"lucide-react\""
        ],
        [
          6,
          "import { useIsMobile } from \"@/hooks/use-mobile\""
        ],
        [
          7,
          "import { cn } from \"@/lib/utils\""
        ],
        [
          8,
          "import { Button } from \"@/components/ui/button\""
        ],
        [
          9,
          "import { Input } from \"@/components/ui/input\""
        ],
        [
          10,
          "import { Separator } from \"@/components/ui/separator\""
        ],
        [
          11,
          "import {"
        ],
        [
          18,
          "import { Skeleton } from \"@/components/ui/skeleton\""
        ],
        [
          19,
          "import {"
        ]
      ],
      "export_details": [
        [
          746,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/checkbox.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as CheckboxPrimitive from \"@radix-ui/react-checkbox\""
        ],
        [
          3,
          "import { Check } from \"lucide-react\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          28,
          "export { Checkbox }"
        ]
      ]
    },
    "client/src/components/ui/carousel.tsx": {
      "imports": 5,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import useEmblaCarousel, {"
        ],
        [
          5,
          "import { ArrowLeft, ArrowRight } from \"lucide-react\""
        ],
        [
          7,
          "import { cn } from \"@/lib/utils\""
        ],
        [
          8,
          "import { Button } from \"@/components/ui/button\""
        ]
      ],
      "export_details": [
        [
          253,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/card.tsx": {
      "imports": 2,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          3,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          79,
          "export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"
        ]
      ]
    },
    "client/src/components/ui/badge.tsx": {
      "imports": 3,
      "exports": 2,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import { cva, type VariantProps } from \"class-variance-authority\""
        ],
        [
          4,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          26,
          "export interface BadgeProps"
        ],
        [
          36,
          "export { Badge, badgeVariants }"
        ]
      ]
    },
    "client/src/components/ui/chart.tsx": {
      "imports": 3,
      "exports": 2,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as RechartsPrimitive from \"recharts\""
        ],
        [
          6,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          11,
          "export type ChartConfig = {"
        ],
        [
          358,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/menubar.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as MenubarPrimitive from \"@radix-ui/react-menubar\""
        ],
        [
          5,
          "import { Check, ChevronRight, Circle } from \"lucide-react\""
        ],
        [
          7,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          239,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/tabs.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as TabsPrimitive from \"@radix-ui/react-tabs\""
        ],
        [
          4,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          53,
          "export { Tabs, TabsList, TabsTrigger, TabsContent }"
        ]
      ]
    },
    "client/src/components/ui/switch.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as SwitchPrimitives from \"@radix-ui/react-switch\""
        ],
        [
          4,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          27,
          "export { Switch }"
        ]
      ]
    },
    "client/src/components/ui/context-menu.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\""
        ],
        [
          3,
          "import { Check, ChevronRight, Circle } from \"lucide-react\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          182,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/command.tsx": {
      "imports": 6,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import { type DialogProps } from \"@radix-ui/react-dialog\""
        ],
        [
          3,
          "import { Command as CommandPrimitive } from \"cmdk\""
        ],
        [
          4,
          "import { Search } from \"lucide-react\""
        ],
        [
          6,
          "import { cn } from \"@/lib/utils\""
        ],
        [
          7,
          "import { Dialog, DialogContent } from \"@/components/ui/dialog\""
        ]
      ],
      "export_details": [
        [
          141,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/input-otp.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import { OTPInput, OTPInputContext } from \"input-otp\""
        ],
        [
          3,
          "import { Dot } from \"lucide-react\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          69,
          "export { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }"
        ]
      ]
    },
    "client/src/components/ui/accordion.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as AccordionPrimitive from \"@radix-ui/react-accordion\""
        ],
        [
          3,
          "import { ChevronDown } from \"lucide-react\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          56,
          "export { Accordion, AccordionItem, AccordionTrigger, AccordionContent }"
        ]
      ]
    },
    "client/src/components/ui/sheet.tsx": {
      "imports": 5,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as SheetPrimitive from \"@radix-ui/react-dialog\""
        ],
        [
          5,
          "import { cva, type VariantProps } from \"class-variance-authority\""
        ],
        [
          6,
          "import { X } from \"lucide-react\""
        ],
        [
          8,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          129,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/hover-card.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as HoverCardPrimitive from \"@radix-ui/react-hover-card\""
        ],
        [
          6,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          29,
          "export { HoverCard, HoverCardTrigger, HoverCardContent }"
        ]
      ]
    },
    "client/src/components/ui/collapsible.tsx": {
      "imports": 1,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\""
        ]
      ],
      "export_details": [
        [
          11,
          "export { Collapsible, CollapsibleTrigger, CollapsibleContent }"
        ]
      ]
    },
    "client/src/components/ui/table.tsx": {
      "imports": 2,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          3,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          108,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/toaster.tsx": {
      "imports": 2,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useToast } from \"@/hooks/use-toast\""
        ],
        [
          2,
          "import {"
        ]
      ],
      "export_details": [
        [
          11,
          "export function Toaster() {"
        ]
      ]
    },
    "client/src/components/ui/alert.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import { cva, type VariantProps } from \"class-variance-authority\""
        ],
        [
          4,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          59,
          "export { Alert, AlertTitle, AlertDescription }"
        ]
      ]
    },
    "client/src/components/ui/select.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as SelectPrimitive from \"@radix-ui/react-select\""
        ],
        [
          5,
          "import { Check, ChevronDown, ChevronUp } from \"lucide-react\""
        ],
        [
          7,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          149,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/toggle-group.tsx": {
      "imports": 5,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\""
        ],
        [
          5,
          "import { type VariantProps } from \"class-variance-authority\""
        ],
        [
          7,
          "import { cn } from \"@/lib/utils\""
        ],
        [
          8,
          "import { toggleVariants } from \"@/components/ui/toggle\""
        ]
      ],
      "export_details": [
        [
          61,
          "export { ToggleGroup, ToggleGroupItem }"
        ]
      ]
    },
    "client/src/components/ui/label.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as LabelPrimitive from \"@radix-ui/react-label\""
        ],
        [
          3,
          "import { cva, type VariantProps } from \"class-variance-authority\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          24,
          "export { Label }"
        ]
      ]
    },
    "client/src/components/ui/alert-dialog.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\""
        ],
        [
          4,
          "import { cn } from \"@/lib/utils\""
        ],
        [
          5,
          "import { buttonVariants } from \"@/components/ui/button\""
        ]
      ],
      "export_details": [
        [
          127,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/progress.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as ProgressPrimitive from \"@radix-ui/react-progress\""
        ],
        [
          6,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          28,
          "export { Progress }"
        ]
      ]
    },
    "client/src/components/ui/tooltip.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          3,
          "import * as React from \"react\""
        ],
        [
          4,
          "import * as TooltipPrimitive from \"@radix-ui/react-tooltip\""
        ],
        [
          6,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          30,
          "export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }"
        ]
      ]
    },
    "client/src/components/ui/pagination.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\""
        ],
        [
          4,
          "import { cn } from \"@/lib/utils\""
        ],
        [
          5,
          "import { ButtonProps, buttonVariants } from \"@/components/ui/button\""
        ]
      ],
      "export_details": [
        [
          109,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/aspect-ratio.tsx": {
      "imports": 1,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\""
        ]
      ],
      "export_details": [
        [
          5,
          "export { AspectRatio }"
        ]
      ]
    },
    "client/src/components/ui/navigation-menu.tsx": {
      "imports": 5,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\""
        ],
        [
          3,
          "import { cva } from \"class-variance-authority\""
        ],
        [
          4,
          "import { ChevronDown } from \"lucide-react\""
        ],
        [
          6,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          118,
          "export {"
        ]
      ]
    },
    "client/src/components/ui/integration-status.tsx": {
      "imports": 2,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { apiRequest } from \"@/lib/queryClient\";"
        ]
      ],
      "export_details": [
        [
          13,
          "export default function IntegrationStatus() {"
        ]
      ]
    },
    "client/src/components/ui/scroll-area.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\""
        ],
        [
          4,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          46,
          "export { ScrollArea, ScrollBar }"
        ]
      ]
    },
    "client/src/components/ui/dropdown-menu.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import * as React from \"react\""
        ],
        [
          2,
          "import * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\""
        ],
        [
          3,
          "import { Check, ChevronRight, Circle } from \"lucide-react\""
        ],
        [
          5,
          "import { cn } from \"@/lib/utils\""
        ]
      ],
      "export_details": [
        [
          182,
          "export {"
        ]
      ]
    },
    "client/src/components/layout/header.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Bell } from \"lucide-react\";"
        ],
        [
          2,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          3,
          "import IntegrationStatus from \"@/components/ui/integration-status\";"
        ]
      ],
      "export_details": [
        [
          5,
          "export default function Header() {"
        ]
      ]
    },
    "client/src/components/layout/sidebar.tsx": {
      "imports": 6,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Link, useLocation } from \"wouter\";"
        ],
        [
          2,
          "import { Brain, Users, Calendar, FileText, CheckSquare, BarChart, Bot, Settings, Menu } from \"lucide-react\";"
        ],
        [
          3,
          "import { useState } from \"react\";"
        ],
        [
          4,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          5,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          6,
          "import { ApiClient } from \"@/lib/api\";"
        ]
      ],
      "export_details": [
        [
          20,
          "export default function Sidebar() {"
        ]
      ]
    },
    "client/src/components/dashboard/ai-insights-panel.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient, type AiInsight } from \"@/lib/api\";"
        ],
        [
          3,
          "import { Bot, Lightbulb, TrendingUp, FileText } from \"lucide-react\";"
        ],
        [
          4,
          "import { Button } from \"@/components/ui/button\";"
        ]
      ],
      "export_details": [
        [
          24,
          "export default function AiInsightsPanel() {"
        ]
      ]
    },
    "client/src/components/dashboard/urgent-action-items.tsx": {
      "imports": 5,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient, type ActionItem } from \"@/lib/api\";"
        ],
        [
          3,
          "import { AlertTriangle, Clock, FileText, Check } from \"lucide-react\";"
        ],
        [
          4,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          5,
          "import { Badge } from \"@/components/ui/badge\";"
        ]
      ],
      "export_details": [
        [
          31,
          "export default function UrgentActionItems() {"
        ]
      ]
    },
    "client/src/components/dashboard/recent-activity.tsx": {
      "imports": 1,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { FileText, Bot, Calendar, CheckCircle, RefreshCw } from \"lucide-react\";"
        ]
      ],
      "export_details": [
        [
          46,
          "export default function RecentActivity() {"
        ]
      ]
    },
    "client/src/components/dashboard/AIIntelligenceDashboard.tsx": {
      "imports": 9,
      "exports": 1,
      "import_details": [
        [
          1,
          "import React, { useState, useEffect } from 'react';"
        ],
        [
          2,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          3,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          4,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          5,
          "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';"
        ],
        [
          6,
          "import { Progress } from '@/components/ui/progress';"
        ],
        [
          7,
          "import { AlertCircle, AlertTriangle, CheckCircle, Brain, Target, TrendingUp, Users, Clock, Star, BookOpen, Shield } from 'lucide-react';"
        ],
        [
          8,
          "import { Alert } from '@/components/ui/alert';"
        ],
        [
          9,
          "import { useToast } from '@/hooks/use-toast';"
        ]
      ],
      "export_details": [
        [
          108,
          "export function AIIntelligenceDashboard({ therapistId, clientId }: AIIntelligenceDashboardProps) {"
        ]
      ]
    },
    "client/src/components/dashboard/progress-overview.tsx": {
      "imports": 0,
      "exports": 1,
      "import_details": [],
      "export_details": [
        [
          22,
          "export default function ProgressOverview() {"
        ]
      ]
    },
    "client/src/components/dashboard/api-status-indicators.tsx": {
      "imports": 5,
      "exports": 2,
      "import_details": [
        [
          1,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient } from \"@/lib/api\";"
        ],
        [
          3,
          "import { Bot, Brain, AlertCircle, CheckCircle, Zap, Sparkles } from \"lucide-react\";"
        ],
        [
          4,
          "import { Badge } from \"@/components/ui/badge\";"
        ],
        [
          5,
          "import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";"
        ]
      ],
      "export_details": [
        [
          7,
          "export interface ApiStatus {"
        ],
        [
          14,
          "export default function ApiStatusIndicators() {"
        ]
      ]
    },
    "client/src/components/dashboard/todays-sessions.tsx": {
      "imports": 9,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient, type SessionNote } from \"@/lib/api\";"
        ],
        [
          3,
          "import { FileText, Clock, User, Upload, Plus } from \"lucide-react\";"
        ],
        [
          4,
          "import { Badge } from \"@/components/ui/badge\";"
        ],
        [
          5,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          6,
          "import { DocumentUploadZone } from \"@/components/forms/DocumentUploadZone\";"
        ],
        [
          7,
          "import { useState } from \"react\";"
        ],
        [
          8,
          "import { useToast } from \"@/hooks/use-toast\";"
        ],
        [
          9,
          "import { queryClient } from \"@/lib/queryClient\";"
        ]
      ],
      "export_details": [
        [
          11,
          "export default function TodaysSessions() {"
        ]
      ]
    },
    "client/src/components/dashboard/todays-schedule.tsx": {
      "imports": 10,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient, type Appointment } from \"@/lib/api\";"
        ],
        [
          3,
          "import { Play, Pause, MoreHorizontal, Calendar, ExternalLink, Clock, Edit, FileText, Users, Video, ChevronDown, ChevronUp, Lightbulb } from \"lucide-react\";"
        ],
        [
          4,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          5,
          "import { Badge } from \"@/components/ui/badge\";"
        ],
        [
          6,
          "import {"
        ],
        [
          13,
          "import { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";"
        ],
        [
          14,
          "import { useToast } from \"@/hooks/use-toast\";"
        ],
        [
          15,
          "import { useState } from \"react\";"
        ],
        [
          16,
          "import { useLocation } from \"wouter\";"
        ]
      ],
      "export_details": [
        [
          18,
          "export default function TodaysSchedule() {"
        ]
      ]
    },
    "client/src/components/dashboard/quick-stats.tsx": {
      "imports": 2,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Calendar, Users, CheckSquare, TrendingUp, CheckCircle2 } from \"lucide-react\";"
        ],
        [
          2,
          "import type { DashboardStats } from \"@/lib/api\";"
        ]
      ],
      "export_details": [
        [
          8,
          "export default function QuickStats({ stats }: QuickStatsProps) {"
        ]
      ]
    },
    "client/src/components/calendar/CalendarHeader.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          2,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          3,
          "import { ChevronLeft, ChevronRight, Calendar, Plus } from 'lucide-react';"
        ],
        [
          4,
          "import { cn } from '@/lib/utils';"
        ]
      ],
      "export_details": [
        [
          17,
          "export const CalendarHeader = ({"
        ]
      ]
    },
    "client/src/components/calendar/AppointmentStatusView.tsx": {
      "imports": 14,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState } from 'react';"
        ],
        [
          2,
          "import { useQuery } from '@tanstack/react-query';"
        ],
        [
          3,
          "import { ApiClient, type Appointment } from '@/lib/api';"
        ],
        [
          4,
          "import { CalendarEvent, AppointmentStats } from '../../types/calendar';"
        ],
        [
          5,
          "import { formatDateLong } from '../../utils/dateUtils';"
        ],
        [
          6,
          "import { cleanEventTitle } from '../../utils/textCleaner';"
        ],
        [
          7,
          "import { getLocationDisplay } from '../../utils/locationUtils';"
        ],
        [
          8,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          9,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          10,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          11,
          "import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';"
        ],
        [
          12,
          "import { ScrollArea } from '@/components/ui/scroll-area';"
        ],
        [
          13,
          "import { cn } from '@/lib/utils';"
        ],
        [
          14,
          "import { CalendarDays, Clock, User, MapPin, CheckCircle, XCircle, AlertCircle, Calendar } from 'lucide-react';"
        ]
      ],
      "export_details": [
        [
          22,
          "export const AppointmentStatusView = ({"
        ]
      ]
    },
    "client/src/components/calendar/AppointmentSummary.tsx": {
      "imports": 6,
      "exports": 1,
      "import_details": [
        [
          1,
          "import React from 'react';"
        ],
        [
          2,
          "import { useQuery } from '@tanstack/react-query';"
        ],
        [
          3,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          4,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          5,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          6,
          "import { Calendar, Clock, MapPin, CheckCircle, AlertCircle, FileText } from 'lucide-react';"
        ]
      ],
      "export_details": [
        [
          35,
          "export function AppointmentSummary({ eventId }: AppointmentSummaryProps) {"
        ]
      ]
    },
    "client/src/components/calendar/DailyView.tsx": {
      "imports": 13,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState } from 'react';"
        ],
        [
          2,
          "import { CalendarEvent } from '../../types/calendar';"
        ],
        [
          3,
          "import { cleanEventTitle, formatClientName } from '../../utils/textCleaner';"
        ],
        [
          4,
          "import { cn } from '@/lib/utils';"
        ],
        [
          5,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          6,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          7,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          8,
          "import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';"
        ],
        [
          9,
          "import { Textarea } from '@/components/ui/textarea';"
        ],
        [
          10,
          "import { ScrollArea } from '@/components/ui/scroll-area';"
        ],
        [
          11,
          "import { Clock, MapPin, User, FileText, Brain, Calendar, ChevronLeft, ChevronRight, Plus, Sparkles, MessageSquare, Target, TrendingUp } from 'lucide-react';"
        ],
        [
          12,
          "import { useToast } from '@/hooks/use-toast';"
        ],
        [
          13,
          "import { AppointmentSummary } from './AppointmentSummary';"
        ]
      ],
      "export_details": [
        [
          34,
          "export const DailyView = ({"
        ]
      ]
    },
    "client/src/components/calendar/WeeklyCalendarGrid.tsx": {
      "imports": 8,
      "exports": 1,
      "import_details": [
        [
          1,
          "import React, { useState } from 'react';"
        ],
        [
          2,
          "import { generateTimeSlots, getEventDurationInSlots, isEventInTimeSlot } from '../../utils/timeSlots';"
        ],
        [
          3,
          "import { formatDateShort } from '../../utils/dateUtils';"
        ],
        [
          4,
          "import { cleanEventTitle } from '../../utils/textCleaner';"
        ],
        [
          5,
          "import { wrapText } from '../../utils/textWrappers';"
        ],
        [
          6,
          "import { CalendarEvent, CalendarDay } from '../../types/calendar';"
        ],
        [
          7,
          "import { cn } from '@/lib/utils';"
        ],
        [
          8,
          "import { getLocationDisplay } from '../../utils/locationUtils';"
        ]
      ],
      "export_details": [
        [
          19,
          "export const WeeklyCalendarGrid = ({"
        ]
      ]
    },
    "client/src/components/common/Header.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          2,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          3,
          "import { ChevronLeft, ChevronRight } from 'lucide-react';"
        ]
      ],
      "export_details": [
        [
          15,
          "export const Header = ({"
        ]
      ]
    },
    "client/src/components/insights/EnhancedInsightsPanel.tsx": {
      "imports": 8,
      "exports": 1,
      "import_details": [
        [
          1,
          "import React, { useState } from 'react';"
        ],
        [
          2,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          3,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          4,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          5,
          "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';"
        ],
        [
          6,
          "import { Progress } from '@/components/ui/progress';"
        ],
        [
          7,
          "import { Alert, AlertDescription } from '@/components/ui/alert';"
        ],
        [
          8,
          "import { AlertCircle, AlertTriangle, CheckCircle, Brain, Target, TrendingUp, FileText, Users, Calendar } from 'lucide-react';"
        ]
      ],
      "export_details": [
        [
          54,
          "export function EnhancedInsightsPanel({"
        ]
      ]
    },
    "client/src/components/forms/DocumentUploadZone.tsx": {
      "imports": 10,
      "exports": 1,
      "import_details": [
        [
          1,
          "import React, { useCallback, useState } from 'react';"
        ],
        [
          2,
          "import { useDropzone } from 'react-dropzone';"
        ],
        [
          3,
          "import { Upload, FileText, Image, FileSpreadsheet, AlertCircle, CheckCircle, Loader2, Clock, Edit } from 'lucide-react';"
        ],
        [
          4,
          "import { Card } from '@/components/ui/card';"
        ],
        [
          5,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          6,
          "import { Progress } from '@/components/ui/progress';"
        ],
        [
          7,
          "import { Alert, AlertDescription } from '@/components/ui/alert';"
        ],
        [
          8,
          "import { Input } from '@/components/ui/input';"
        ],
        [
          9,
          "import { useMutation, useQueryClient } from '@tanstack/react-query';"
        ],
        [
          10,
          "import { useToast } from '@/hooks/use-toast';"
        ]
      ],
      "export_details": [
        [
          32,
          "export function DocumentUploadZone({ onProgressNoteGenerated }: DocumentUploadZoneProps) {"
        ]
      ]
    },
    "client/src/components/forms/ClientForm.tsx": {
      "imports": 19,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState } from 'react';"
        ],
        [
          2,
          "import { useForm } from 'react-hook-form';"
        ],
        [
          3,
          "import { zodResolver } from '@hookform/resolvers/zod';"
        ],
        [
          4,
          "import { z } from 'zod';"
        ],
        [
          5,
          "import { useMutation, useQueryClient } from '@tanstack/react-query';"
        ],
        [
          6,
          "import { ApiClient, type Client } from '@/lib/api';"
        ],
        [
          7,
          "import { useToast } from '@/hooks/use-toast';"
        ],
        [
          8,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          9,
          "import { Input } from '@/components/ui/input';"
        ],
        [
          10,
          "import { Label } from '@/components/ui/label';"
        ],
        [
          11,
          "import { Textarea } from '@/components/ui/textarea';"
        ],
        [
          12,
          "import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';"
        ],
        [
          13,
          "import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';"
        ],
        [
          14,
          "import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';"
        ],
        [
          15,
          "import { CalendarIcon, Loader2 } from 'lucide-react';"
        ],
        [
          16,
          "import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';"
        ],
        [
          17,
          "import { Calendar } from '@/components/ui/calendar';"
        ],
        [
          18,
          "import { format } from 'date-fns';"
        ],
        [
          19,
          "import { cn } from '@/lib/utils';"
        ]
      ],
      "export_details": [
        [
          44,
          "export function ClientForm({ client, open, onOpenChange }: ClientFormProps) {"
        ]
      ]
    },
    "client/src/components/clients/ClientListGenerator.tsx": {
      "imports": 9,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState } from 'react';"
        ],
        [
          2,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          3,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          4,
          "import { Textarea } from '@/components/ui/textarea';"
        ],
        [
          5,
          "import { Label } from '@/components/ui/label';"
        ],
        [
          6,
          "import { Upload, Users, Download, FileText } from 'lucide-react';"
        ],
        [
          7,
          "import { useToast } from '@/hooks/use-toast';"
        ],
        [
          8,
          "import { useMutation, useQueryClient } from '@tanstack/react-query';"
        ],
        [
          9,
          "import { ApiClient } from '@/lib/api';"
        ]
      ],
      "export_details": [
        [
          20,
          "export function ClientListGenerator() {"
        ]
      ]
    },
    "client/src/components/clients/QuickClientUpdate.tsx": {
      "imports": 9,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState } from 'react';"
        ],
        [
          2,
          "import { useMutation, useQueryClient } from '@tanstack/react-query';"
        ],
        [
          3,
          "import { ApiClient, type Client } from '@/lib/api';"
        ],
        [
          4,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          5,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          6,
          "import { Input } from '@/components/ui/input';"
        ],
        [
          7,
          "import { Label } from '@/components/ui/label';"
        ],
        [
          8,
          "import { useToast } from '@/hooks/use-toast';"
        ],
        [
          9,
          "import { Calendar, Users, Save } from 'lucide-react';"
        ]
      ],
      "export_details": [
        [
          59,
          "export function QuickClientUpdate({ clients }: Props) {"
        ]
      ]
    },
    "client/src/components/clients/RealClientImporter.tsx": {
      "imports": 8,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState } from 'react';"
        ],
        [
          2,
          "import { useMutation, useQueryClient } from '@tanstack/react-query';"
        ],
        [
          3,
          "import { ApiClient, type Client } from '@/lib/api';"
        ],
        [
          4,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          5,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          6,
          "import { useToast } from '@/hooks/use-toast';"
        ],
        [
          7,
          "import { Users, Upload, CheckCircle, AlertCircle } from 'lucide-react';"
        ],
        [
          8,
          "import { Progress } from '@/components/ui/progress';"
        ]
      ],
      "export_details": [
        [
          83,
          "export function RealClientImporter() {"
        ]
      ]
    },
    "client/src/pages/not-found.tsx": {
      "imports": 2,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Card, CardContent } from \"@/components/ui/card\";"
        ],
        [
          2,
          "import { AlertCircle } from \"lucide-react\";"
        ]
      ],
      "export_details": [
        [
          4,
          "export default function NotFound() {"
        ]
      ]
    },
    "client/src/pages/action-items.tsx": {
      "imports": 11,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery, useMutation } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient, type ActionItem } from \"@/lib/api\";"
        ],
        [
          3,
          "import { CheckSquare, Plus, Search, Filter, AlertTriangle, Clock, FileText, Check, X } from \"lucide-react\";"
        ],
        [
          4,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          5,
          "import { Input } from \"@/components/ui/input\";"
        ],
        [
          6,
          "import { Badge } from \"@/components/ui/badge\";"
        ],
        [
          7,
          "import { Textarea } from \"@/components/ui/textarea\";"
        ],
        [
          8,
          "import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";"
        ],
        [
          9,
          "import { queryClient } from \"@/lib/queryClient\";"
        ],
        [
          10,
          "import { useToast } from \"@/hooks/use-toast\";"
        ],
        [
          11,
          "import { useState } from \"react\";"
        ]
      ],
      "export_details": [
        [
          13,
          "export default function ActionItems() {"
        ]
      ]
    },
    "client/src/pages/settings.tsx": {
      "imports": 11,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState } from \"react\";"
        ],
        [
          2,
          "import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";"
        ],
        [
          3,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          4,
          "import { Input } from \"@/components/ui/input\";"
        ],
        [
          5,
          "import { Label } from \"@/components/ui/label\";"
        ],
        [
          6,
          "import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";"
        ],
        [
          7,
          "import { Switch } from \"@/components/ui/switch\";"
        ],
        [
          8,
          "import { Badge } from \"@/components/ui/badge\";"
        ],
        [
          9,
          "import { useToast } from \"@/hooks/use-toast\";"
        ],
        [
          10,
          "import { User, Bell, Calendar, Shield, Palette, Download } from \"lucide-react\";"
        ],
        [
          11,
          "import drProctorAvatar from \"@assets/generated-image (1)_1753977205405.png\";"
        ]
      ],
      "export_details": [
        [
          13,
          "export default function Settings() {"
        ]
      ]
    },
    "client/src/pages/oauth-test.tsx": {
      "imports": 3,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          2,
          "import { Card, CardContent, CardHeader } from '@/components/ui/card';"
        ],
        [
          3,
          "import { useState } from 'react';"
        ]
      ],
      "export_details": [
        [
          5,
          "export default function OAuthTest() {"
        ]
      ]
    },
    "client/src/pages/oauth-simple.tsx": {
      "imports": 2,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          2,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ]
      ],
      "export_details": [
        [
          4,
          "export default function OAuthSimple() {"
        ]
      ]
    },
    "client/src/pages/oauth-troubleshoot.tsx": {
      "imports": 4,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          2,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          3,
          "import { Alert, AlertDescription } from '@/components/ui/alert';"
        ],
        [
          4,
          "import { AlertTriangle, CheckCircle, XCircle } from 'lucide-react';"
        ]
      ],
      "export_details": [
        [
          6,
          "export default function OAuthTroubleshoot() {"
        ]
      ]
    },
    "client/src/pages/session-notes.tsx": {
      "imports": 6,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { FileText, Plus, Search, Filter, Mic, Bot } from \"lucide-react\";"
        ],
        [
          2,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          3,
          "import { Input } from \"@/components/ui/input\";"
        ],
        [
          4,
          "import { Badge } from \"@/components/ui/badge\";"
        ],
        [
          5,
          "import { Textarea } from \"@/components/ui/textarea\";"
        ],
        [
          6,
          "import { useState } from \"react\";"
        ]
      ],
      "export_details": [
        [
          8,
          "export default function SessionNotes() {"
        ]
      ]
    },
    "client/src/pages/analytics.tsx": {
      "imports": 8,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient } from \"@/lib/api\";"
        ],
        [
          3,
          "import { BarChart, TrendingUp, Users, Calendar, Clock, FileText, Target, Activity } from \"lucide-react\";"
        ],
        [
          4,
          "import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";"
        ],
        [
          5,
          "import { Progress } from \"@/components/ui/progress\";"
        ],
        [
          6,
          "import { Badge } from \"@/components/ui/badge\";"
        ],
        [
          7,
          "import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";"
        ],
        [
          8,
          "import { useState } from \"react\";"
        ]
      ],
      "export_details": [
        [
          10,
          "export default function Analytics() {"
        ]
      ]
    },
    "client/src/pages/ai-insights.tsx": {
      "imports": 12,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery, useMutation } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient, type AiInsight } from \"@/lib/api\";"
        ],
        [
          3,
          "import { Bot, Lightbulb, TrendingUp, FileText, AlertTriangle, Sparkles, RefreshCw, Eye, X, Brain, Users, Calendar, AlertCircle } from \"lucide-react\";"
        ],
        [
          4,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          5,
          "import { Badge } from \"@/components/ui/badge\";"
        ],
        [
          6,
          "import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";"
        ],
        [
          7,
          "import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";"
        ],
        [
          8,
          "import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";"
        ],
        [
          9,
          "import { queryClient } from \"@/lib/queryClient\";"
        ],
        [
          10,
          "import { useToast } from \"@/hooks/use-toast\";"
        ],
        [
          11,
          "import { useState } from \"react\";"
        ],
        [
          12,
          "import { AIIntelligenceDashboard } from \"@/components/dashboard/AIIntelligenceDashboard\";"
        ]
      ],
      "export_details": [
        [
          14,
          "export default function AiInsights() {"
        ]
      ]
    },
    "client/src/pages/progress-notes.tsx": {
      "imports": 8,
      "exports": 1,
      "import_details": [
        [
          1,
          "import React, { useState } from 'react';"
        ],
        [
          2,
          "import { useQuery } from '@tanstack/react-query';"
        ],
        [
          3,
          "import { Card } from '@/components/ui/card';"
        ],
        [
          4,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          5,
          "import { DocumentUploadZone } from '@/components/forms/DocumentUploadZone';"
        ],
        [
          6,
          "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';"
        ],
        [
          7,
          "import { FileText, Upload, Calendar, User, Clock } from 'lucide-react';"
        ],
        [
          8,
          "import { format } from 'date-fns';"
        ]
      ],
      "export_details": [
        [
          27,
          "export function ProgressNotesPage() {"
        ]
      ]
    },
    "client/src/pages/google-cloud-setup.tsx": {
      "imports": 6,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          2,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          3,
          "import { Alert, AlertDescription } from '@/components/ui/alert';"
        ],
        [
          4,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          5,
          "import {"
        ],
        [
          14,
          "import { useState } from 'react';"
        ]
      ],
      "export_details": [
        [
          16,
          "export default function GoogleCloudSetup() {"
        ]
      ]
    },
    "client/src/pages/calendar-integration.tsx": {
      "imports": 8,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState, useEffect } from 'react';"
        ],
        [
          2,
          "import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';"
        ],
        [
          3,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          4,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          5,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          6,
          "import { Alert, AlertDescription } from '@/components/ui/alert';"
        ],
        [
          7,
          "import {"
        ],
        [
          18,
          "import { apiRequest } from '@/lib/queryClient';"
        ]
      ],
      "export_details": [
        [
          33,
          "export default function CalendarIntegration() {"
        ]
      ]
    },
    "client/src/pages/oauth-debug.tsx": {
      "imports": 7,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState } from 'react';"
        ],
        [
          2,
          "import { useQuery } from '@tanstack/react-query';"
        ],
        [
          3,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          4,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          5,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          6,
          "import { Alert, AlertDescription } from '@/components/ui/alert';"
        ],
        [
          7,
          "import {"
        ]
      ],
      "export_details": [
        [
          17,
          "export default function OAuthDebug() {"
        ]
      ]
    },
    "client/src/pages/oauth-test-simple.tsx": {
      "imports": 8,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState } from 'react';"
        ],
        [
          2,
          "import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';"
        ],
        [
          3,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          4,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          5,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          6,
          "import { Alert, AlertDescription } from '@/components/ui/alert';"
        ],
        [
          7,
          "import { CheckCircle, XCircle, Calendar, RefreshCw, LogOut } from 'lucide-react';"
        ],
        [
          8,
          "import { apiRequest } from '@/lib/queryClient';"
        ]
      ],
      "export_details": [
        [
          10,
          "export default function OAuthTestSimple() {"
        ]
      ]
    },
    "client/src/pages/oauth-quick-test.tsx": {
      "imports": 5,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState, useEffect } from 'react';"
        ],
        [
          2,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          3,
          "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';"
        ],
        [
          4,
          "import { Badge } from '@/components/ui/badge';"
        ],
        [
          5,
          "import { CheckCircle, XCircle, ExternalLink, RefreshCw } from 'lucide-react';"
        ]
      ],
      "export_details": [
        [
          7,
          "export default function OAuthQuickTest() {"
        ]
      ]
    },
    "client/src/pages/appointments.tsx": {
      "imports": 6,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient, type Appointment } from \"@/lib/api\";"
        ],
        [
          3,
          "import { Calendar, Plus, Clock, MapPin } from \"lucide-react\";"
        ],
        [
          4,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          5,
          "import { Badge } from \"@/components/ui/badge\";"
        ],
        [
          6,
          "import { useState } from \"react\";"
        ]
      ],
      "export_details": [
        [
          8,
          "export default function Appointments() {"
        ]
      ]
    },
    "client/src/pages/dashboard.tsx": {
      "imports": 12,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient, type DashboardStats } from \"@/lib/api\";"
        ],
        [
          3,
          "import QuickStats from \"@/components/dashboard/quick-stats\";"
        ],
        [
          4,
          "import TodaysSchedule from \"@/components/dashboard/todays-schedule\";"
        ],
        [
          5,
          "import AiInsightsPanel from \"@/components/dashboard/ai-insights-panel\";"
        ],
        [
          6,
          "import UrgentActionItems from \"@/components/dashboard/urgent-action-items\";"
        ],
        [
          7,
          "import RecentActivity from \"@/components/dashboard/recent-activity\";"
        ],
        [
          8,
          "import ProgressOverview from \"@/components/dashboard/progress-overview\";"
        ],
        [
          9,
          "import ApiStatusIndicators from \"@/components/dashboard/api-status-indicators\";"
        ],
        [
          10,
          "import TodaysSessions from \"@/components/dashboard/todays-sessions\";"
        ],
        [
          11,
          "import { Plus } from \"lucide-react\";"
        ],
        [
          12,
          "import { Button } from \"@/components/ui/button\";"
        ]
      ],
      "export_details": [
        [
          14,
          "export default function Dashboard() {"
        ]
      ]
    },
    "client/src/pages/calendar.tsx": {
      "imports": 17,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useState } from 'react';"
        ],
        [
          2,
          "import { useQuery } from '@tanstack/react-query';"
        ],
        [
          3,
          "import { ApiClient } from '@/lib/api';"
        ],
        [
          4,
          "import { CalendarEvent, CalendarDay } from '../types/calendar';"
        ],
        [
          5,
          "import { getWeekStart, getWeekEnd, getWeekDays, addWeeks, isCurrentWeek, getWeekRangeString } from '../utils/dateUtils';"
        ],
        [
          7,
          "import { WeeklyCalendarGrid } from '../components/calendar/WeeklyCalendarGrid';"
        ],
        [
          8,
          "import { CalendarHeader } from '../components/calendar/CalendarHeader';"
        ],
        [
          9,
          "import { Link } from 'wouter';"
        ],
        [
          10,
          "import { DailyView } from '../components/calendar/DailyView';"
        ],
        [
          11,
          "import { AppointmentStatusView } from '../components/calendar/AppointmentStatusView';"
        ],
        [
          12,
          "import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';"
        ],
        [
          13,
          "import { Card, CardContent } from '@/components/ui/card';"
        ],
        [
          14,
          "import { Button } from '@/components/ui/button';"
        ],
        [
          15,
          "import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';"
        ],
        [
          16,
          "import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';"
        ],
        [
          17,
          "import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';"
        ],
        [
          18,
          "import { CalendarDays, List, Clock, FileDown, ChevronLeft, ChevronRight, Calendar as CalendarIcon, Settings } from 'lucide-react';"
        ]
      ],
      "export_details": [
        [
          20,
          "export default function Calendar() {"
        ]
      ]
    },
    "client/src/pages/clients.tsx": {
      "imports": 14,
      "exports": 1,
      "import_details": [
        [
          1,
          "import { useQuery } from \"@tanstack/react-query\";"
        ],
        [
          2,
          "import { ApiClient, type Client } from \"@/lib/api\";"
        ],
        [
          3,
          "import { Users, Plus, Search, Filter, Edit2, Calendar, Phone, Mail, UserCheck, Upload, FileText } from \"lucide-react\";"
        ],
        [
          4,
          "import { Button } from \"@/components/ui/button\";"
        ],
        [
          5,
          "import { Input } from \"@/components/ui/input\";"
        ],
        [
          6,
          "import { Badge } from \"@/components/ui/badge\";"
        ],
        [
          7,
          "import { ClientForm } from \"@/components/forms/ClientForm\";"
        ],
        [
          8,
          "import { ClientListGenerator } from \"@/components/clients/ClientListGenerator\";"
        ],
        [
          9,
          "import { RealClientImporter } from \"@/components/clients/RealClientImporter\";"
        ],
        [
          10,
          "import { QuickClientUpdate } from \"@/components/clients/QuickClientUpdate\";"
        ],
        [
          11,
          "import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";"
        ],
        [
          12,
          "import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";"
        ],
        [
          13,
          "import { useState } from \"react\";"
        ],
        [
          14,
          "import { format } from \"date-fns\";"
        ]
      ],
      "export_details": [
        [
          16,
          "export default function Clients() {"
        ]
      ]
    }
  },
  "timestamp": "2025-08-01T13:45:00Z"
}